{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/Services/auth.service.ts","webpack:///src/Services/chapter.service.ts","webpack:///src/Services/course.service.ts","webpack:///src/Services/exam.service.ts","webpack:///src/Services/lesson.service.ts","webpack:///src/Services/material.service.ts","webpack:///src/Services/question.service.ts","webpack:///src/app/Components/Course/courses/courses.component.ts","webpack:///src/app/Components/Course/courses/courses.component.html","webpack:///src/app/Components/Course/create-course/create-course.component.ts","webpack:///src/app/Components/Course/create-course/create-course.component.html","webpack:///src/app/Components/Course/material/material.component.ts","webpack:///src/app/Components/Course/material/material.component.html","webpack:///src/app/Components/Course/teachers-course/teachers-course.component.ts","webpack:///src/app/Components/Course/teachers-course/teachers-course.component.html","webpack:///src/app/Components/Course/update-course/update-course.component.ts","webpack:///src/app/Components/Course/update-course/update-course.component.html","webpack:///src/app/Components/Student/all-courses-in-category/all-courses-in-category.component.ts","webpack:///src/app/Components/Student/all-courses-in-category/all-courses-in-category.component.html","webpack:///src/app/Components/Student/course-info/course-info.component.ts","webpack:///src/app/Components/Student/course-info/course-info.component.html","webpack:///src/app/Components/Student/student-courses/student-courses.component.ts","webpack:///src/app/Components/Student/student-courses/student-courses.component.html","webpack:///src/app/Components/Student/take-exam/take-exam.component.ts","webpack:///src/app/Components/Student/take-exam/take-exam.component.html","webpack:///src/app/Components/course-details/chapter/chapter.component.ts","webpack:///src/app/Components/course-details/chapter/chapter.component.html","webpack:///src/app/Components/course-details/course-details.component.ts","webpack:///src/app/Components/course-details/course-details.component.html","webpack:///src/app/Components/course-details/lesson/lesson.component.ts","webpack:///src/app/Components/course-details/lesson/lesson.component.html","webpack:///src/app/Components/exam/exam.component.ts","webpack:///src/app/Components/exam/exam.component.html","webpack:///src/app/Components/home/home.component.ts","webpack:///src/app/Components/home/home.component.html","webpack:///src/app/Components/navbar/navbar.component.ts","webpack:///src/app/Components/navbar/navbar.component.html","webpack:///src/app/Components/search-course-results/search-course-results.component.ts","webpack:///src/app/Components/search-course-results/search-course-results.component.html","webpack:///src/app/Components/user/profile/profile.component.ts","webpack:///src/app/Components/user/profile/profile.component.html","webpack:///src/app/Components/user/sign-in/sign-in.component.ts","webpack:///src/app/Components/user/sign-in/sign-in.component.html","webpack:///src/app/Components/user/sign-up/sign-up.component.ts","webpack:///src/app/Components/user/sign-up/sign-up.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthuserService","httpClient","isLogin","localStorage","getItem","user","image","Formdata","FormData","append","Type","Name","UserName","Email","Level","Password","ConfirmPassword","Address","PhoneNumber","Gender","post","ApiURl","username","password","headerForTokenApi","data","ApiLogin","headers","get","Id","put","URL","providedIn","ChapterService","ChapterInfo","CourseCode","Description","CourseId","ID","messageSource","currentMessage","asObservable","Message","next","chapter","ChapterID","CourseService","userService","course","CourseImage","Coursefd","Code","MaxDegree","toString","MinDegree","StageID","Semester","s","JSON","parse","StgID","Sem","Subject","courseId","userID","stage","ExamService","studentId","degree","info","CouresId","StudentId","Degree","LessonService","lesson","LessonID","MaterialService","material","materialFile","materialfd","DisplayOrder","reportProgress","observe","idToUp","idToDown","QuestionService","question","TFQ","CoursesComponent","_CourseService","_Router","modalService","_courseSer","FB","editCourse","group","required","minLength","Desc","console","log","userInfo","GetCoursesByUserID","subscribe","res","CoursesList","CourseCount","length","err","alert","content","courseCode","GetCourseByCode","Course","open","result","ok","deletedProd","find","prod","cancel","DeleteCourse","navigate","index","indexOf","splice","event","target","files","courseImage","updateCourse","selector","templateUrl","styleUrls","CreateCourseComponent","courseSer","Stages","name","Image","CreateCourse","createCourse","readURL","MaterialComponent","_MaterialService","_ActivatedRoute","closeResult","snapshot","params","GetAllMaterialsByLesson","materialList","CreatematerialFG","type","Creatematerial","UploadProgress","progress","Math","round","total","loaded","Response","push","body","reset","ariaLabelledBy","MaterialID","deleteMaterial","mat","m","GetMaterialUpp","success","swapMat","GetMaterialDown","TeachersCourseComponent","UpdateCourseComponent","parseInt","UpdateCourse","AllCoursesInCategoryComponent","curSer","stageName","getAllCourseInStage","GetCoursesByCodeAndStage","CourseList","teacherName","filter","crs","TeacherName","searchByTeacherName","CourseInfoComponent","chaSer","LesSer","getCourseDetails","getAllChapter","courseInfo","arr","sort","a","b","courseDatails","document","getElementById","textContent","display","style","StudentCoursesComponent","router","showCourses","TakeExamComponent","questionSer","exSer","MCQQuestion","TFQuestion","totalDegree","questionMCQCounter","questionTFCounter","saveAns","isMcq","isFinish","unchecked","getMCQQuestion","mcq","curMCQQuestion","getTFQuestion","tf","curTFQuestion","i","c","isTrue","isFound","item","questionNo","IsTrue","ans","userAns","stuent_exam","ChapterComponent","route","_chapterSer","EditedChapter","AddChapterForm","EditChapterForm","ChapterForm","GetChaptersByCourseCode","ChaptersList","createChapter","succ","EditChapter","changeChapter","C","DeleteChapterByID","changeAddChapterForm","CourseDetailsComponent","LessonComponent","_lessonSer","AddLessonForm","EditLessonForm","LessonForm","EditedLessonForm","response","GetLessonsByChapter","LessonsList","L","EditedLesson","createLesson","changeAddLessonForm","EditLesson","changeEditLessonForm","DeleteLessonByID","ExamComponent","QuestionSer","toastr","isExpand","option","IsSelected","QuestionID","Question","QuestionContent","CorrectAnswer","Choices","choice","ch1","ch2","ch3","ch4","ch5","ch6","ch11","ch12","ch13","ch14","ch15","ch16","ChoiseQues","TFQues","TFQuestionContent","backgroundColor","margin","padding","AddTFQ","classList","add","newQuestion","createQuestion","showSuccess","addChoiseQ","addnewoption","addTFQ","toggle","HomeComponent","NavbarComponent","authSer","isLoginError","currenUser","undefined","userName","login","setItem","access_token","click","GetUserInfo","stringify","removeItem","checkAccount","SearchCourseResultsComponent","activatedRoute","searchCourse","courses","ProfileComponent","account","LoginForm","email","maxLength","InstructorImage","editProfile","Toggle","SignInComponent","SignUpComponent","userSer","registerUser","reg","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","AuthGuard","_AuthService","loggedIn","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenParam } from 'src/Interfaces/token-param';\r\nimport { IAccount } from 'src/Interfaces/iaccount';\r\nimport { Iuser } from 'src/Interfaces/iuser';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthuserService {\r\n  \r\n  userInfo:Iuser;\r\n\r\n  isLogin : boolean;\r\n\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { \r\n    this.isLogin = false;\r\n  }\r\n\r\n  loggedIn()\r\n {\r\n    return !!localStorage.getItem('userToken') ;\r\n }\r\n\r\n\r\n\r\n  registerUser(user:IAccount,image:File):Observable<IAccount>\r\n  {\r\n    // const httpOptions =  new HttpHeaders({\r\n    //   'Content-Type': 'application/json',\r\n    //    'Accept': ' /'\r\n    //     });\r\n    // return this.httpClient.post(`${environment.ApiURl}/Account`, user, { headers: httpOptions });\r\n\r\n    const Formdata = new FormData();\r\n    Formdata.append('Type',user.Type);\r\n    Formdata.append('Name',user.Name);\r\n    Formdata.append('UserName',user.UserName);\r\n    Formdata.append('Email',user.Email);\r\n\r\n    Formdata.append('Level',user.Level);\r\n    Formdata.append('Password',user.Password);\r\n    Formdata.append('ConfirmPassword',user.ConfirmPassword);\r\n    Formdata.append('Address',user.Address);\r\n    Formdata.append('PhoneNumber',user.PhoneNumber);\r\n    Formdata.append('Gender',user.Gender);\r\n    \r\n    Formdata.append(\"Image\",image);\r\n\r\n\r\n    return this.httpClient.post<IAccount>(`${environment.ApiURl}/Account`,Formdata);\r\n\r\n    \r\n  }\r\n\r\n  \r\n\r\n  login(username: string, password: string): Observable<TokenParam> {\r\n    var headerForTokenApi = new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    });\r\n  \r\n    var data = `grant_type=password&username=${username}&password=${password}`;\r\n  \r\n    return this.httpClient.post<TokenParam>(environment.ApiLogin, data, {\r\n      headers: headerForTokenApi,\r\n    });\r\n  }\r\n\r\n\r\n  getRole():Observable<string>{\r\n    var headerForTokenApi = new HttpHeaders({\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n      'Authorization': `bearer ${localStorage.getItem('userToken')}`\r\n      \r\n    });\r\n  \r\n    return this.httpClient.get<string>(`${environment.ApiURl}/Role`, {headers: headerForTokenApi})\r\n  }\r\n\r\n  GetUserInfo(username:string,password:string):Observable<Iuser>\r\n  {\r\n    return this.httpClient.get<Iuser>(`${environment.ApiURl}/account/GetUserInfo/${username}/${password}`)\r\n\r\n  }\r\n\r\n  \r\n  \r\n  editProfile(user:Iuser,image:File):Observable<Iuser>\r\n  {\r\n    // const httpOptions =  new HttpHeaders({\r\n    //   'Content-Type': 'application/json',\r\n    //    'Accept': ' /'\r\n    //     });\r\n    // return this.httpClient.post(`${environment.ApiURl}/Account`, user, { headers: httpOptions });\r\n\r\n    const Formdata = new FormData();\r\n    Formdata.append('ID',user.Id);\r\n\r\n    Formdata.append('Type',user.Type);\r\n    Formdata.append('Name',user.Name);\r\n    Formdata.append('UserName',user.UserName);\r\n    Formdata.append('Email',user.Email);\r\n\r\n    Formdata.append('Level',user.Level);\r\n    // Formdata.append('Password',user.Password);\r\n    // Formdata.append('ConfirmPassword',user.ConfirmPassword);\r\n    Formdata.append('Address',user.Address);\r\n    Formdata.append('PhoneNumber',user.PhoneNumber);\r\n    Formdata.append('Gender',user.Gender);\r\n    Formdata.append(\"Image\",image);\r\n    \r\n    // Formdata.append(\"Image\",image);\r\n\r\n\r\n    return this.httpClient.put<Iuser>(`${environment.URL}/EditProfile`,Formdata);\r\n\r\n    \r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { IChapter } from 'src/Interfaces/ichapter';\nimport { environment } from 'src/environments/environment';\nimport { Observable, Subject, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChapterService {\n\n\n  ChapterInfo:IChapter={CourseCode:\"\",Description:\"\",CourseId :0 , Name:\"\",ID:null};\n\n  //ChapterInfo:Subject<IChapter>=new Subject<IChapter>();\n\n\n\n  constructor(private httpClient: HttpClient) { }\n  \n\n\n  private messageSource=new BehaviorSubject('');\n  \n  currentMessage=this.messageSource.asObservable();\n\n  changeChapter(Message:string)\n  {\n      this.messageSource.next(Message);\n    //alert(\"in change Cart \"+this.messageSource.value);\n  }\n\n\n\n\n\n\n  createChapter(chapter: IChapter) {\n    return this.httpClient.post(`${environment.ApiURl}/Chapters`,chapter);\n  }\n  GetChaptersByCourseCode(CourseCode:number):Observable<IChapter[]>\n  {\n    return this.httpClient.get<IChapter[]>(`${environment.ApiURl}/Chapters/GetChaptersByCourseCode/${CourseCode}`);\n  }\n  \n\n  GetChapterByID(ChapterID:number):any\n  {\n    return this.httpClient.get(`${environment.ApiURl}/Chapter/${ChapterID}`);\n  }\n\n  DeleteChapterByID(ChapterID:number):any\n  {\n    return this.httpClient.delete(`${environment.ApiURl}/Chapters/${ChapterID}`);\n  }\n\n  EditChapter(chapter:IChapter):any\n  {\n    return this.httpClient.put(`${environment.ApiURl}/Chapters/${chapter.ID}`,chapter);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ICourse } from 'src/Interfaces/icourse';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Observable, observable } from 'rxjs';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\nimport { Iuser } from 'src/Interfaces/iuser';\r\nimport { CourseTeacher } from 'src/Interfaces/course-teacher';\r\nimport { IChapter } from 'src/Interfaces/ichapter';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CourseService {\r\n  constructor(private httpClient: HttpClient,private userService : AuthuserService) {}\r\n\r\n  createCourse(course: ICourse,CourseImage:File):Observable<ICourse>{\r\n    const Coursefd = new FormData();\r\n    Coursefd.append('Code',course.Code);\r\n    Coursefd.append('Name',course.Name);\r\n    Coursefd.append('Description',course.Description);\r\n    Coursefd.append('MaxDegree',course.MaxDegree.toString());\r\n    Coursefd.append('MinDegree',course.MinDegree.toString());\r\n    Coursefd.append('StageID',course.StageID.toString());\r\n    Coursefd.append('Semester',course.Semester.toString());\r\n    Coursefd.append(\"Image\",CourseImage);\r\n    \r\n    let s: Iuser=JSON.parse(localStorage.getItem('user'));\r\n\r\n    Coursefd.append(\"TeacherID\",s.Id);\r\n    //Coursefd.append(\"TeacherID\",this.userService.userInfo.Id);\r\n\r\n\r\n\r\n\r\n    return this.httpClient.post<ICourse>(`${environment.ApiURl}/Courses`,Coursefd);\r\n  }\r\n  searchCourse(StgID : number,Sem : number, Subject : string){\r\n    return this.httpClient.get(`${environment.ApiURl}/Courses/${StgID}/${Sem}/${Subject}`);\r\n  }\r\n\r\n  GetAllCourses():Observable<ICourse[]>\r\n  {\r\n    \r\n    // if(sessionStorage.getItem('access_token')!=null)\r\n    // {\r\n    //   var httpOptions1 =  new HttpHeaders({ 'Authorization':'Bearer '+sessionStorage.getItem('access_token')});\r\n    \r\n    // } \r\n    \r\n  \r\n   \r\n     return this.httpClient.get<ICourse[]>(`${environment.ApiURl}/courses`);//,{headers:httpOptions1});\r\n  }\r\n\r\n  GetCourseByCode(courseId:number):Observable<ICourse>\r\n  {\r\n   \r\n      // if(sessionStorage.getItem('access_token') !=null)\r\n      // {\r\n      //   var httpOptions1 =  new HttpHeaders({ 'Authorization':'Bearer '+sessionStorage.getItem('access_token')});\r\n      \r\n      // }   \r\n      return this.httpClient.get<ICourse>(`${environment.URL}/GetCourse/${courseId}`)//,{headers:httpOptions1});\r\n      \r\n    \r\n  }\r\n\r\n\r\n  updateCourse(course:ICourse,CourseImage:File):Observable<ICourse>\r\n{\r\n  // if(sessionStorage.getItem('access_token') !=null)\r\n  //   {\r\n  //     var httpOptions1 =  new HttpHeaders({ 'Authorization':'Bearer '+sessionStorage.getItem('access_token')});\r\n    \r\n  //   }   \r\n  const Coursefd = new FormData();\r\n  Coursefd.append('Code',course.Code);\r\n  Coursefd.append('Name',course.Name);\r\n  Coursefd.append('Description',course.Description);\r\n  Coursefd.append('MaxDegree',course.MaxDegree.toString());\r\n  Coursefd.append('MinDegree',course.MinDegree.toString());\r\n  Coursefd.append('StageID',course.StageID.toString());\r\n  Coursefd.append('Semester',course.Semester.toString());\r\n  Coursefd.append(\"Image\",CourseImage);\r\n\r\n  return this.httpClient.put<ICourse>(`${environment.ApiURl}/Courses`,Coursefd)//,{headers:httpOptions1})\r\n\r\n}\r\n\r\n\r\nDeleteCourse(CourseId:number)\r\n{\r\n  // if(sessionStorage.getItem('access_token') !=null)\r\n  //   {\r\n  //     var httpOptions1 =  new HttpHeaders({ 'Authorization':'Bearer '+sessionStorage.getItem('access_token')});\r\n    \r\n  //   } \r\n  return this.httpClient.delete<ICourse>(`${environment.ApiURl}/Courses/${CourseId}`);//,{headers:httpOptions1})\r\n\r\n}\r\n\r\nGetCoursesByUserID(userID:string):Observable<ICourse[]>\r\n{\r\n  return this.httpClient.get<ICourse[]>(`${environment.ApiURl}/Courses/GetCoursesByUserID/${userID}`)//,{headers:httpOptions1});\r\n\r\n}\r\n\r\nGetCoursesByCodeAndStage(code:string , stage:string){\r\n  return this.httpClient.get<CourseTeacher[]>(`${environment.URL}/AllCourses/${code}/${stage}`) \r\n}\r\n\r\ngetAllChapter(courseId:number){\r\n  return this.httpClient.get<IChapter>(`${environment.ApiURl}/Chapters/${courseId}`) \r\n}\r\n\r\ngetCourseDetails(courseId:number){\r\n  return this.httpClient.get(`${environment.URL}/CourseDatails/${courseId}`) \r\n  \r\n  \r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { StudentCoures } from 'src/Interfaces/student-coures';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExamService {\n  \n   info : StudentCoures;  \n\n  constructor(private httpClient: HttpClient) { }\n\n  stuent_exam(courseId: number , studentId: string , degree : number){\n\n    this.info = {CouresId : courseId , StudentId : studentId ,Degree : degree };\n     return this.httpClient.post(`${environment.ApiURl}/Exam`, this.info );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ILesson } from 'src/Interfaces/ilesson';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LessonService {\n\n  constructor(private httpClient: HttpClient) { }\n  createLesson(lesson: ILesson) {\n    return this.httpClient.post(`${environment.ApiURl}/Lessons`,lesson);\n  }\n\n  GetLessonsByChapter(ChapterID:number):Observable<ILesson[]> {\n    return this.httpClient.get<ILesson[]>(`${environment.ApiURl}/Lessons/GetLessonsByChapter/${ChapterID}`);\n  }\n\n  DeleteLessonByID(LessonID:number):any\n  {\n    return this.httpClient.delete(`${environment.ApiURl}/Lessons/${LessonID}`);\n  }\n\n  EditLesson(lesson:ILesson):any\n  {\n    return this.httpClient.put(`${environment.ApiURl}/Lessons/${lesson.ID}`,lesson);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Imaterial } from 'src/Interfaces/imaterial';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialService {\n\n  constructor(private httpClient: HttpClient){}\n\n  Creatematerial(material: Imaterial,materialFile:File){\n    const materialfd = new FormData();\n    materialfd.append('LessonID',material.LessonID.toString());\n    materialfd.append(\"Type\",material.Type);\n    materialfd.append(\"Description\",material.Description);\n    materialfd.append(\"material\",materialFile);\n    materialfd.append(\"DisplayOrder\",material.DisplayOrder.toString());\n    return this.httpClient.post<Imaterial>(`${environment.ApiURl}/Material`,materialfd,\n    {reportProgress:true,observe:\"events\"}\n  );\n  }\n\n  GetAllMaterialsByLesson(LessonID:number):Observable<Imaterial[]>\n  {\n    \n    // if(sessionStorage.getItem('access_token')!=null)\n    // {\n    //   var httpOptions1 =  new HttpHeaders({ 'Authorization':'Bearer '+sessionStorage.getItem('access_token')});\n    \n    // } \n    \n  \n   \n     return this.httpClient.get<Imaterial[]>(`${environment.ApiURl}/material/GetMaterialsByLesson/${LessonID}`);//,{headers:httpOptions1});\n  }\n\n  deleteMaterial(id:number):Observable<Imaterial>\n  {\n    return this.httpClient.delete<Imaterial>(`${environment.ApiURl}/material/${id}`);//,{headers:httpOptions1});\n\n  }\n\n\n  GetMaterialUpp(idToUp:number,idToDown:number):Observable<Imaterial>\n  {\n    return this.httpClient.get<Imaterial>(`${environment.ApiURl}/material/GetMaterialUp/${idToUp}/${idToDown}`);//,{headers:httpOptions1});\n\n  }\n\n  GetMaterialDown(idToDown:number,idToUp:number):Observable<Imaterial>\n  {\n    return this.httpClient.get<Imaterial>(`${environment.ApiURl}/material/GetMaterialDown/${idToDown}/${idToUp}`);//,{headers:httpOptions1});\n\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MCQ } from 'src/Interfaces/mcq';\nimport { environment } from 'src/environments/environment';\nimport { TrueFalse } from 'src/Interfaces/true-false';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuestionService {\n\n  constructor(private httpClient: HttpClient) { }\n  \n  createQuestion(question : MCQ , courseId : number) {\n    return this.httpClient.post(`${environment.ApiURl}/MCQs/${courseId}`,question);\n  }\n\n  getMCQQuestion(courseId : number):Observable<MCQ[]>{\n    return this.httpClient.get<MCQ[]>(`${environment.URL}/MCQInCourse/${courseId}`);\n  }\n\n  getTFQuestion(courseId : number):Observable<TrueFalse[]>{\n    return this.httpClient.get<TrueFalse[]>(`${environment.URL}/TFQuestion/${courseId}`);\n  }\n\n  AddTFQ(TFQ: TrueFalse , courseId : number) {\n    return this.httpClient.post(`${environment.ApiURl}/TrueFalseQuestions/${courseId}`,TFQ);\n  }\n\n  /*GetLessonsByChapter(ChapterID:number):Observable<ILesson[]> {\n    return this.httpClient.get<ILesson[]>(`${environment.ApiURl}/Lessons/GetLessonsByChapter/${ChapterID}`);\n  }*/\n\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { CourseService } from 'src/Services/course.service';\r\nimport { Router } from '@angular/router';\r\nimport { ICourse } from 'src/Interfaces/icourse';\r\nimport { AuthuserService } from '../../../../Services/auth.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-courses',\r\n  templateUrl: './courses.component.html',\r\n  styleUrls: ['./courses.component.css'],\r\n})\r\nexport class CoursesComponent implements OnInit {\r\n  CoursesList: ICourse[];\r\n  CourseCount : number;\r\n  Course: ICourse ;\r\n  courseImage:File;\r\n\r\n  editCourse: FormGroup;\r\n\r\n\r\n  constructor(\r\n    private _CourseService: CourseService,\r\n    private _Router: Router,\r\n    private userService: AuthuserService,\r\n    private modalService :NgbModal ,\r\n    private _courseSer : CourseService,\r\n    private FB: FormBuilder\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.editCourse = this.FB.group({\r\n      Name: ['', [Validators.required, Validators.minLength(3)]],\r\n      Desc: ['', [Validators.required, Validators.minLength(3)]],\r\n      MaxDegree: ['', [Validators.required]],\r\n      MinDegree: ['', [Validators.required]],\r\n      Semester: ['', [Validators.required]],\r\n      StageID: ['', [Validators.required]],\r\n     \r\n    });\r\n\r\n\r\n    console.log(this.userService.userInfo);\r\n    //this._CourseService.GetAllCourses().subscribe(\r\n      this._CourseService.GetCoursesByUserID(localStorage.getItem('userId')).subscribe(\r\n      res=>{\r\n        this.CoursesList=res;\r\n        this.CourseCount=this.CoursesList.length;\r\n      },\r\n      err=>{console.log(err) ;alert(err)}\r\n    )\r\n    }\r\n\r\n  \r\n\r\n  updateCourse(content, courseCode){\r\n\r\n    console.log('Course Code  : ' + courseCode);\r\n\r\n    this._courseSer.GetCourseByCode(courseCode)\r\n    .subscribe(\r\n     (res) => {\r\n\r\n       console.log(\"Result : \" + res);\r\n\r\n       this.Course = res as ICourse,\r\n         console.log('Course : ' + this.Course.Name)\r\n\r\n         this.modalService.open(content).result.then((ok)=> {\r\n          let deletedProd = this.CoursesList.find(prod=>prod.Code == courseCode)},\r\n          (cancel)=>console.log(cancel)\r\n  \r\n        );\r\n       },\r\n       err => console.log(err)\r\n      )\r\n\r\n      \r\n  }\r\n\r\n  DeleteCourse(courseCode) {\r\n    this._CourseService.DeleteCourse(courseCode).subscribe(\r\n      (res) => {\r\n        alert('deleted successfully !');\r\n        this._Router.navigate(['/courses']);\r\n        //alert(res.Id);\r\n      },\r\n\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteCourse(content, courseId){\r\n\r\n    //this._prodServe.getProduct(pid).subscribe((res)=>{\r\n\r\n      this.modalService.open(content ).result.\r\n      then((ok)=> {\r\n\r\n        let course = this.CoursesList.find(course=>course.Id == courseId)\r\n       \r\n        const index = this.CoursesList.indexOf(course)\r\n  \r\n        this.CoursesList.splice(index,1)\r\n\r\n        this._CourseService.DeleteCourse(courseId).subscribe(\r\n          (res) => {\r\n           \r\n            console.log(\"Delete Successfuly\")\r\n            //alert(res.Id);\r\n          },\r\n    \r\n          (err) => {\r\n            console.log(err);\r\n          }\r\n        );\r\n\r\n\r\n        \r\n      \r\n      },\r\n      (cancel)=>\r\n      {\r\n        console.log(cancel)\r\n      }\r\n      )\r\n    \r\n    }\r\n\r\n\r\n\r\n    /**/\r\n    readURL(event): void \r\n  {\r\n   \r\n    \r\n    if (event.target.files && event.target.files[0])\r\n     {\r\n      this.courseImage= event.target.files[0];\r\n      //this.course.Image= this.courseImage.name;\r\n    }\r\n  \r\n  }\r\n  UpdateCourse():void\r\n  {\r\n    \r\n    this._courseSer.updateCourse(this.Course,this.courseImage).subscribe(\r\n      (data: any) => {\r\n        alert(data)\r\n        this._Router.navigate([\"/courses\"]);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n    \r\n  \r\n\r\n  deleteProduct(content, courseCode){\r\n\r\n    //this._prodServe.getProduct(pid).subscribe((res)=>{\r\n\r\n      this.modalService.open(content ).result.\r\n      then((ok)=> {\r\n        let deletedProd = this.CoursesList.find(prod=>prod.Code == courseCode)\r\n       \r\n        const index = this.CoursesList.indexOf(deletedProd)\r\n  \r\n        this.CoursesList.splice(index,1)\r\n\r\n        this._CourseService.DeleteCourse(courseCode).subscribe(\r\n          (res) => {\r\n            alert('deleted successfully !');\r\n            this._Router.navigate(['/courses']);\r\n            //alert(res.Id);\r\n          },\r\n    \r\n          (err) => {\r\n            console.log(err);\r\n          }\r\n        );\r\n\r\n\r\n        \r\n      \r\n      },\r\n      (cancel)=>\r\n      {\r\n        console.log(cancel)\r\n      }\r\n      )\r\n    \r\n    }\r\n  }\r\n","<div class=\"container\" style=\"padding-top: 20px;\">\r\n\r\n\r\n        <div class=\"row mx-auto \" style=\"width: 100%;\">\r\n                <div class=\" col-md-5 col-sm-4 \">\r\n                        <input class=\"form-control d-inline\" style=\"width: 15%;\" type=\"number\"\r\n                                [(ngModel)]=\"CourseCount\"> Items\r\n                        <a [routerLink]=\"['/createcourse']\" class=\"btn-sm btn-gold\">New Course</a>\r\n                </div>\r\n\r\n                <div class=\"col-md-7 col-sm-8  d-flex justify-content-md-end \">\r\n\r\n\r\n                </div>\r\n        </div>\r\n        <br>\r\n\r\n        <div class=\" mx-auto  \" style=\"width: 95%;padding:10px\">\r\n\r\n                <div class=\"row\" *ngFor=\"let Course of CoursesList ;let i=index\"\r\n                        style=\"border-top: 0.7px solid #CDCDCD;border-bottom: 0.7px solid #CDCDCD;padding: 20px;border-radius:20px;\">\r\n                        <div class=\"col-lg-3\">\r\n                                <img [src]=\"Course.Image\" class=\"image img-fluid img-thumbnail\"\r\n                                        style=\"width: 100%;max-height: 170px;\">\r\n\r\n                                <!--<button type=\"button\" style=\" position: absolute;top: 50%;right: 40%;\">Details</button>-->\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-8 col-10 \"\r\n                                style=\"font-family: sf pro display,-apple-system,BlinkMacSystemFont,Roboto,segoe ui,Helvetica,Arial,sans-serif,apple color emoji,segoe ui emoji,segoe ui symbol;;\">\r\n                                <h6 style=\"color:#222;margin-bottom: .5rem;font-weight: 400;font-weight:700\">\r\n                                        {{Course.Name}}\r\n                                </h6>\r\n\r\n\r\n                                <div> {{Course.Description}} </div>\r\n                                <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                                <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                                <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                                <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                                <i class=\"fas fa-star-half-alt\" style=\"color: #eb8a2f;\"></i><br>\r\n                                113,902 reviews\r\n                                80.5 total hours 400 lectures All Levels<br>\r\n\r\n                                <div style=\"margin-top:15px\" class=\"d-flex justify-content-around\r\n                                w-50\">\r\n                                <a role=\"button\" routerLink=\"/coursedetails/{{Course.Id}}\"\r\n                                        class=\"btn-gold \">Details</a>\r\n\r\n                                <a role=\"button\" routerLink=\"/exam/{{Course.Id}}\"\r\n                                class=\"btn btn-danger\">Add Question</a>\r\n\r\n                        </div>\r\n                                <!--<button type=\"button\">best Seller</button>-->\r\n                        </div>\r\n\r\n                        <div class=\"col-lg-1 col-2\">\r\n                                <a class=\"btn-gold\" style=\"text-decoration:none;margin-bottom: 5px;\"\r\n                                        routerLink=\"/UpdateCourse/{{Course.Id}}\"\r\n                                        routerLinkActive=\"router-link-active\">\r\n                                        <i class=\" fas fa-sync-alt\"></i> </a><br>\r\n\r\n                                <a class=\"btn btn-danger\" style=\"text-decoration:none\"\r\n                                        (click)=\"deleteCourse(confirmDelete,Course.Id)\">\r\n                                        <i class=\"far fa-trash-alt\"></i>\r\n                                </a>\r\n\r\n                        </div>\r\n\r\n                </div>\r\n\r\n\r\n        </div>\r\n\r\n</div>\r\n<ng-template #confirmDelete let-modal class=\"fade modal\">\r\n        <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" id=\"modal-title\">Course deletion</h4>\r\n                <!---->\r\n                <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\"\r\n                        aria-describedby=\"modal-title\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n        </div>\r\n        <div class=\"modal-body\" style=\"height: 150px;\">\r\n                <p><strong>Are you sure you want to delete <span class=\"text-primary\">This Course</span>\r\n                                </strong></p>\r\n                <p>All information associated to this user profile will be permanently deleted.\r\n                        <span class=\"text-danger\">This operation can not be undone.</span>\r\n                </p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n                <!---->\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n                <!---->\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('Ok click')\">Ok</button>\r\n        </div>\r\n\r\n</ng-template>\r\n\r\n<ng-template #editCourse let-modal class=\"fade modal\">\r\n        <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\" id=\"modal-title\"><i class=\"fas fa-edit\"></i> Edit Course</h4>\r\n                <!---->\r\n                <button type=\"button\" class=\"close\" (click)=\"modal.dismiss('Cross click')\"\r\n                        aria-describedby=\"modal-title\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n\r\n\r\n                <div class=\"\">\r\n                        <div style=\"text-align: center;\">\r\n                                <img [src]=\"Course.Image\" class=\"image img-fluid img-thumbnail\"\r\n                                        style=\"width: 150px;height: 150px;\">\r\n                        </div>\r\n                        <br>\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                                <label for=\"courseName\" style=\"margin-top: 5px;\">\r\n                                        Course Name :\r\n                                </label>\r\n\r\n                                <input class=\"form-control\" type=\"text\" [(ngModel)]=\"Course.Name\" id=\"courseName\"\r\n                                        formControlName=\"Name\">\r\n\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <label for=\"maxDegree\" style=\"margin-top: 5px;\">\r\n                                Max Degree :\r\n                        </label>\r\n\r\n\r\n                        <input class=\"form-control\" type=\"number\" [(ngModel)]=\"Course.MaxDegree\" id=\"maxDegree\"\r\n                                formControlName=\"Desc\">\r\n\r\n\r\n                        <label for=\"minDegree\" style=\"margin-top: 5px;\">\r\n                                Min Degree :\r\n                        </label>\r\n\r\n\r\n                        <input class=\"form-control\" type=\"number\" [(ngModel)]=\"Course.MinDegree\" id=\"minDegree\"\r\n                                formControlName=\"MinDegree\">\r\n\r\n                        <label for=\"semester\" style=\"margin-top: 5px;\">\r\n                                Semester :\r\n                        </label>\r\n\r\n\r\n                        <select id=\"inputState\" class=\"form-control custom-select\" [(ngModel)]=\"Course.Semester\"\r\n                                formControlName=\"Semester\">\r\n                                <option selected>First</option>\r\n                                <option>Second</option>\r\n                        </select>\r\n\r\n                        <div class=\"col-md-7 col-sm-8  d-flex justify-content-md-end \">\r\n\r\n                                <label for=\"semester\" style=\"margin-top: 5px;\">\r\n                                        Stage :\r\n                                </label>\r\n\r\n                        </div>\r\n                </div>\r\n                <br>\r\n\r\n                <select id=\"inputState\" class=\"form-control custom-select\" [(ngModel)]=\"Course.StageID\"\r\n                        formControlName=\"StageID\">\r\n                        <option selected>Stage 1</option>\r\n                        <option>Stage 2</option>\r\n                        <option>Stage 3</option>\r\n                        <option>Stage 4</option>\r\n                        <option>Stage 5</option>\r\n                        <option>Stage 6</option>\r\n                        <option>Stage 7</option>\r\n                        <option>Stage 8</option>\r\n                        <option>Stage 9</option>\r\n\r\n                </select>\r\n\r\n                <div class=\"col-lg-8 col-10 \"\r\n                        style=\"font-family: sf pro display,-apple-system,BlinkMacSystemFont,Roboto,segoe ui,Helvetica,Arial,sans-serif,apple color emoji,segoe ui emoji,segoe ui symbol;;\">\r\n                        <h6 style=\"color:#222;margin-bottom: .5rem;font-weight: 400;font-weight:700\">\r\n                                {{Course.Name}}\r\n                        </h6>\r\n\r\n\r\n                        <div> {{Course.Description}} </div>\r\n                        <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                        <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                        <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                        <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\r\n                        <i class=\"fas fa-star-half-alt\" style=\"color: #eb8a2f;\"></i><br>\r\n                        113,902 reviews\r\n                        80.5 total hours 400 lectures All Levels\r\n\r\n\r\n                        <!--<button type=\"button\">best Seller</button>-->\r\n                </div>\r\n\r\n                <div class=\"col-lg-1 col-2\">\r\n                        <a href=\"#\" class=\"btn btn-outline-primary\" style=\"text-decoration:none;margin-bottom: 5px;\">\r\n                                <i class=\"fas fa-sync-alt\"></i> </a><br>\r\n\r\n                        <!--Image-->\r\n                        <label for=\"semester\" style=\"margin-top: 5px;\">\r\n                                Course Image\r\n                        </label>\r\n\r\n                </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div class=\"custom-file\">\r\n                <input type=\"file\" class=\"custom-file-input\" id=\"validatedCustomFile\" (change)=\"readURL($event);\"\r\n                        required>\r\n                <label class=\"custom-file-label\" for=\"validatedCustomFile\">Choose\r\n                        file...</label>\r\n                <div class=\"invalid-feedback\">Example invalid custom file feedback</div>\r\n        </div>\r\n\r\n\r\n\r\n        <label for=\"semester\" style=\"margin-top: 5px;\">\r\n                Course Description\r\n        </label>\r\n\r\n        <textarea class=\"form-control\" rows=\"4\" cols=\"50\" name=\"comment\" form=\"usrform\" [(ngModel)]=\"Course.Description\"\r\n                formControlName=\"Desc\" maxlength=\"126\" placeholder=\"Enter text here...\">\r\n        </textarea>\r\n\r\n\r\n        <div class=\"modal-footer\">\r\n                <!---->\r\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\r\n                        (click)=\"modal.dismiss('cancel click')\">Cancel</button>\r\n                <!---->\r\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('Ok click')\">Ok</button>\r\n        </div>\r\n        \r\n\r\n</ng-template>","import { Component, OnInit } from '@angular/core';\r\nimport { ICourse } from 'src/Interfaces/icourse';\r\n\r\nimport { Istage } from 'src/Interfaces/istage';\r\n\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CourseService } from 'src/Services/course.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-create-course',\r\n  templateUrl: './create-course.component.html',\r\n  styleUrls: ['./create-course.component.css']\r\n})\r\nexport class CreateCourseComponent implements OnInit {\r\n\r\n  course: ICourse;\r\n  courseImage:File;\r\n  Stages:Istage[];\r\n  \r\n\r\n  CreateCourse: FormGroup;\r\n\r\n  constructor(  private courseSer : CourseService\r\n    ,private FB: FormBuilder, private _Router:Router,private userService : AuthuserService) { \r\n      \r\n  this.Stages=[{id:1,name:'Stage1'},{id:2,name:'Stage2'},{id:3,name:'Stage3'},{id:4,name:'Stage4'},{id:5,name:'Stage5'}\r\n  ,{id:6,name:'Stage6'},{id:7,name:'Stage7'},{id:8,name:'Stage8'}];\r\n\r\n    this.course = {\r\n      Id :  0,\r\n      Code:'',\r\n      Name: '',\r\n      Description:'',\r\n      MaxDegree: 0,\r\n      MinDegree: 0,\r\n      StageID : 0,\r\n      Semester : 0,\r\n      Image:''\r\n\r\n    };\r\n   \r\n  }\r\n  readURL(event): void \r\n  {\r\n    if (event.target.files && event.target.files[0])\r\n     {\r\n      this.courseImage= event.target.files[0];\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.CreateCourse = this.FB.group({\r\n      Code: ['', [Validators.required, Validators.minLength(3)]],\r\n      Name: ['', [Validators.required, Validators.minLength(3)]],\r\n      Desc: ['', [Validators.required, Validators.minLength(3)]],\r\n      MaxDegree: ['', [Validators.required]],\r\n      MinDegree: ['', [Validators.required]],\r\n      Semester: ['', [Validators.required]],\r\n      StageID: ['', [Validators.required]],\r\n     \r\n    });\r\n  }\r\n\r\n  createCourse() {\r\n    \r\n    this.courseSer.createCourse(this.course,this.courseImage).subscribe(\r\n      (data: any) => {\r\n        alert(data)\r\n        this._Router.navigate([\"/courses\"]);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n}\r\n","\r\n  <form [formGroup]=\"CreateCourse\" (ngSubmit)=\"createCourse()\" class=\"mx-auto\" style=\"width: 50%;\">\r\n    <div class=\"form-horizontal\">\r\n        <div class=\"mx-auto d-flex justify-content-center \">\r\n            <h3 class=\" \" style=\"margin-left: 10px;\">Create Course </h3>\r\n\r\n            <i class=\"fab fa-amazon  \" style=\"color:#ca9819;font-size:37px;margin-left: 10px; \"></i>\r\n        </div>\r\n        <hr />\r\n        <!-- <hr style=\"background-color: #f1c75f;\"/> -->\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Course Code</label>\r\n            <input [(ngModel)]=\"course.Code\" type=\"text\" class=\"form-control\" formControlName=\"Code\">\r\n\r\n            <div [hidden]=\"CreateCourse.controls['Code'].valid || CreateCourse.controls['Code'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                UserName is required and must be more Than 3 Chars\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Course Name</label>\r\n            <input [(ngModel)]=\"course.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\r\n\r\n            <div [hidden]=\"CreateCourse.controls['Name'].valid || CreateCourse.controls['Name'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                UserName is required and must be more Than 3 Chars\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Description </label>\r\n            <input [(ngModel)]=\"course.Description\" type=\"text\" class=\"form-control\" formControlName=\"Desc\" maxlength=\"126\">\r\n\r\n            <div [hidden]=\"CreateCourse.controls['Desc'].valid || CreateCourse.controls['Desc'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                UserName is required and must be more Than 3 Chars\r\n            </div>\r\n        </div>\r\n\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Max Degree</label>\r\n            <input [(ngModel)]=\"course.MaxDegree\" type=\"number\" class=\"form-control\"\r\n                formControlName=\"MaxDegree\">\r\n\r\n            <div [hidden]=\"CreateCourse.controls['MaxDegree'].valid || CreateCourse.controls['MaxDegree'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                not matched\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Min Degree</label>\r\n            <input [(ngModel)]=\"course.MinDegree\" type=\"number\" class=\"form-control\"\r\n                formControlName=\"MinDegree\">\r\n\r\n                <div [hidden]=\"CreateCourse.controls['MinDegree'].value <= CreateCourse.controls['MaxDegree'].value\"\r\n                class=\"alert alert-warning\">\r\n                  sorry Min degree should be less than max degree \r\n                </div> \r\n    \r\n\r\n            <div [hidden]=\"CreateCourse.controls['MinDegree'].valid || CreateCourse.controls['MinDegree'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                not matched\r\n            </div>\r\n        </div>\r\n\r\n        \r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Semester</label>\r\n           \r\n            <select   class=\"form-control\" [(ngModel)]=\"course.Semester\"  formControlName=\"Semester\"> \r\n              <option value=\"1\">\r\n                \r\n                     First\r\n             </option>\r\n\r\n             <option value=\"2\"> \r\n                \r\n                Second\r\n        </option>\r\n           </select> \r\n   \r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Stage</label>\r\n           \r\n            <select   class=\"form-control\" [(ngModel)]=\"course.StageID\" formControlName=\"StageID\" > \r\n              <option *ngFor=\"let Stage of Stages\" [value]=\"Stage.id\">\r\n                \r\n                      {{Stage.name}}\r\n             </option>\r\n           </select> \r\n   \r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Course Image</label><br>\r\n            <input type=\"file\" (change)=\"readURL($event);\">\r\n            \r\n       </div>\r\n       <!-- -->\r\n\r\n       <button class=\"btn mx-auto float-right\" style=\"background-color: #ca9819;\" [disabled]=\"!CreateCourse.valid ||CreateCourse.controls['MinDegree'].value > CreateCourse.controls['MaxDegree'].value\"\r\n       type=\"submit\">Create</button>\r\n\r\n\r\n    </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Imaterial } from 'src/Interfaces/imaterial';\nimport { MaterialService } from 'src/Services/material.service';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from \"rxjs\";\n//import {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\n\n\n\nimport {\n  HttpClient,\n  HttpEventType,\n  HttpErrorResponse\n} from \"@angular/common/http\";\nimport { map, catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\n\n\n@Component({\n  selector: 'app-material',\n  templateUrl: './material.component.html',\n  styleUrls: ['./material.component.css']\n})\nexport class MaterialComponent implements OnInit {\n  progress: number;\n  material: Imaterial;\n  materialFile:File;\n  CreatematerialFG: FormGroup;\n  LessonID:number;\n\n  materialList: Imaterial[];\n\n  closeResult = '';\n  constructor(private _MaterialService:MaterialService,private _ActivatedRoute:ActivatedRoute \n    ,private FB: FormBuilder, private _Router:Router,private modalService: NgbModal) { \n       }\n\n  ngOnInit(): void {\n    this.LessonID=this._ActivatedRoute.snapshot.params['lessonID']\n\n      this._MaterialService.GetAllMaterialsByLesson(this.LessonID).subscribe(\n        data=>{this.materialList=data},\n        err=>console.log(err)\n      )\n    \n      this.CreatematerialFG = this.FB.group({\n        material: ['', [Validators.required]],\n        Description: ['', [Validators.required]]\n      });\n\n      this.material=\n      {\n        ID:null,\n        Name:'',\n        LessonID:this.LessonID,\n        Type:'',\n        Description:'',\n        DisplayOrder:0\n      }\n\n  }\n  readURL(event): void \n  {\n   \n    \n    if (event.target.files && event.target.files[0])\n     {\n      this.materialFile= event.target.files[0];\n      this.material.Type= this.materialFile.type;\n    }\n  \n  }\n\n  Creatematerial()\n  {\n    this.material.DisplayOrder=this.materialList.length+1;\n    \n    this._MaterialService.Creatematerial(this.material,this.materialFile).subscribe(\n      (event: any) => {\n       // alert(data)\n        //this._Router.navigate([\"/courses\"]);\n        if (event.type == HttpEventType.UploadProgress)\n         {\n          this.progress = Math.round((100 / event.total) * event.loaded);\n        } else if (event.type == HttpEventType.Response) {\n          this.progress = null;\n         \n          this.materialList.push(event.body)\n          this.CreatematerialFG.reset();\n        }\n      },\n      (err) => console.log(err)\n    );\n  }\n\n  open(content) {\n     this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'});//.result.then((result) => {\n    //   this.closeResult = `Closed with: ${result}`;\n    // },\n    //  (reason) => {\n    //   //this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n    // });\n  }\n  openDeleteModal(name) {\n    this.modalService.open(name);\n  }\n\n  deleteMaterial(MaterialID)\n  {\n    this._MaterialService.deleteMaterial(MaterialID).subscribe(\n      data=>{\n        let mat = this.materialList.find(m=>m.ID == MaterialID)\n       \n        const index = this.materialList.indexOf(mat)\n  \n        this.materialList.splice(index,1)\n      \n      }\n      ,err=>{console.log(err)}\n    )\n  }\n\n  Up(idToUp,idToDown)\n  {\n    \n    this._MaterialService.GetMaterialUpp(this.materialList[idToUp].ID,this.materialList[idToDown].ID).subscribe(\n      success=>\n      {\n         var swapMat;\n         swapMat=this.materialList[idToUp];\n         this.materialList[idToUp]=this.materialList[idToDown];\n         this.materialList[idToDown]=swapMat;\n      },\n      err=>{console.log(err)}\n    )\n\n  }\n  \n  Dowm(idToDown,idToUp)\n  {\n    this._MaterialService.GetMaterialDown(this.materialList[idToDown].ID,this.materialList[idToUp].ID).subscribe(\n      success=>\n      {\n         var swapMat;\n         swapMat=this.materialList[idToUp];\n         this.materialList[idToUp]=this.materialList[idToDown];\n         this.materialList[idToDown]=swapMat;\n      },\n      err=>{console.log(err)}\n    )\n  }\n}\n\n","<br>\n<div style=\" width:50%; margin-left:20%\">\n  <h1 style=\"text-align:center;\"> Add A material</h1>\n  <form [formGroup]=\"CreatematerialFG\" (ngSubmit)=\"Creatematerial() \">\n\n\n    <div class=\"form-group\">\n      <label for=\"\"> Description </label>\n      <br>\n      <input type=\"text\" [(ngModel)]=\"material.Description\" formControlName=\"Description\"\n        style=\"width:50%;height:200px\">\n    </div>\n\n\n    <div class=\"form-group\">\n      <label for=\"\">Upload material</label>\n      <br>\n      <input type=\"file\" (change)=\"readURL($event);\" formControlName=\"material\">\n\n    </div>\n\n\n    <div class=\"progress\" *ngIf=\"progress\">\n      <div class=\"progress-bar\" [style.width]=\"progress + '%'\">{{progress}}%</div>\n    </div>\n    <br>\n\n    <button class=\"btn-gold mx-auto float-right \" [disabled]=\"!CreatematerialFG.valid \" type=\"submit\">upload</button>\n\n\n\n  </form>\n\n  <br><br>\n  <table class=\"table \" [hidden]=\"materialList.length<0\">\n    <thead>\n      <tr>\n        <th scope=\"col\">#</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Preiview</th>\n        <th scope=\"col\">Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let mat of materialList ;let i=index\">\n        <th scope=\"row\">\n          <div class=\"drag-handle\">\n            <ng-container [ngTemplateOutlet]=\"dragHandleTmpl\">\n            </ng-container> {{i+1}}\n          </div>\n\n        </th>\n        <td>{{mat.Description }}</td>\n        <td>\n          <!-- //////////////////////////////////////////////////////////////////////////////////// -->\n\n\n          <ng-template #content let-modal>\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\" id=\"modal-basic-title\">Display material</h4>\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form>\n                <div class=\"form-group\">\n                  <div *ngIf=\"mat.Type.startsWith('image')\" class=\"text-center\" style=\"width: 100%; height: 100%;\">\n                    <img src=\"{{mat.Name}}\" style=\"width: 100%; height: 100%;\" />\n                  </div>\n                  <div *ngIf=\"mat.Type.startsWith('video')\" class=\"text-center\" style=\"width: 100%; height: 100%;\">\n\n                    <video width=\"450\" height=\"350\" controls>\n                      <source src=\"{{mat.Name}}\" type=\"video/mp4\" width=\"450\" height=\"350\">\n                      <source src=\"{{mat.Name}}\" type=\"video/ogg\" width=\"450\" height=\"350\">\n                    </video> </div>\n\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">ok</button>\n            </div>\n          </ng-template>\n\n          <!-- //////////////////////////////////////////////////////////////////////////////////// -->\n          <a *ngIf=\"mat.Type.startsWith('application')||mat.Type.startsWith('text') \"\n            class=\"btn btn-lg btn-outline-primary\" target=\"_blank\" href=\"{{mat.Name}}\"> Open </a>\n          <button *ngIf=\" ! mat.Type.startsWith('application')\" class=\"btn btn-lg btn-outline-primary\"\n            (click)=\"open(content)\">Display</button>\n\n        </td>\n        <td>\n          <!-- //////////////////////////////////delete modal//////////////////////////////////////// -->\n          <ng-template #Confirmdeletion let-modal>\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\" id=\"modal-basic-title\">Display material</h4>\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <form>\n                <div class=\"form-group\">\n\n                  Are you sure you want to delete this material !\n\n                </div>\n              </form>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-danger\"\n                (click)=\"deleteMaterial(mat.ID);modal.close('Save click')\">Yes</button>\n              <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Close</button>\n            </div>\n          </ng-template>\n          <!-- /////////////////////////////////////////////////////////////////////////// -->\n          <button type=\"button\" ngbAutofocus class=\"btn btn-danger\"\n            (click)=\"openDeleteModal(Confirmdeletion)\">Delete</button>\n\n        </td>\n\n\n        <td>\n          <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" *ngIf=\"i>0\" (click)=\"Up(i,i-1)\"><i\n              class=\"fa fa-arrow-up\" aria-hidden=\"true\"></i>\n          </button>\n\n        </td>\n\n        <td>\n          <button type=\"button\" ngbAutofocus class=\"btn btn-primary\" *ngIf=\"i<materialList.length-1\"\n            (click)=\"Dowm(i,i+1)\"><i class=\"fa fa-arrow-down\" aria-hidden=\"true\"></i>\n          </button>\n\n        </td>\n\n\n      </tr>\n\n\n    </tbody>\n  </table>\n\n</div>\n\n<ng-template #dragHandleTmpl>\n  <svg class=\"bi bi-list handle\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\"\n    xmlns=\"http://www.w3.org/2000/svg\">\n    <path fill-rule=\"evenodd\"\n      d=\"M2.5 11.5A.5.5 0 013 11h10a.5.5 0 010 1H3a.5.5 0 01-.5-.5zm0-4A.5.5 0 013 7h10a.5.5 0 010 1H3a.5.5 0 01-.5-.5zm0-4A.5.5 0 013 3h10a.5.5 0 010 1H3a.5.5 0 01-.5-.5z\"\n      clip-rule=\"evenodd\" />\n  </svg>\n</ng-template>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-teachers-course',\n  templateUrl: './teachers-course.component.html',\n  styleUrls: ['./teachers-course.component.css']\n})\nexport class TeachersCourseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>teachers-course works!</p>\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { ICourse } from 'src/Interfaces/icourse';\r\n\r\nimport { Istage } from 'src/Interfaces/istage';\r\n\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CourseService } from 'src/Services/course.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-update-course',\r\n  templateUrl: './update-course.component.html',\r\n  styleUrls: ['./update-course.component.css']\r\n})\r\nexport class UpdateCourseComponent implements OnInit {\r\n  course: ICourse;\r\n  courseImage:File;\r\n  Stages:Istage[];\r\n  CourseCode: string;\r\n\r\nupdateCourse: FormGroup;\r\nconstructor(private _courseSer : CourseService,private _ActivatedRoute:ActivatedRoute \r\n  , /* private _Location:Location ,*/private _Router:Router\r\n,private FB: FormBuilder){ \r\n\r\n    this.Stages=[{id:1,name:'Stage1'},{id:2,name:'Stage2'},{id:3,name:'Stage3'},{id:4,name:'Stage4'},{id:5,name:'Stage5'}\r\n  ,{id:6,name:'Stage6'},{id:7,name:'Stage7'},{id:8,name:'Stage8'}];\r\n  // this.course = {\r\n  //   Code:'',\r\n  //   Name: '',\r\n  //   Description:'',\r\n  //   MaxDegree: 0,\r\n  //   MinDegree: 0,\r\n  //   StageID : 0,\r\n  //   Semester : 0,\r\n  //   Image:''\r\n\r\n  // };\r\n \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateCourse = this.FB.group({\r\n      Name: ['', [Validators.required, Validators.minLength(3)]],\r\n      Desc: ['', [Validators.required, Validators.minLength(3)]],\r\n      MaxDegree: ['', [Validators.required]],\r\n      MinDegree: ['', [Validators.required]],\r\n      Semester: ['', [Validators.required]],\r\n      StageID: ['', [Validators.required]],\r\n     \r\n    });\r\n    this.CourseCode = this._ActivatedRoute.snapshot.params[\"CourseId\"];\r\n\r\n    this._courseSer.GetCourseByCode(parseInt(this.CourseCode))\r\n    .subscribe(\r\n     res => {\r\n       this.course = res,\r\n         console.log(res)\r\n       },\r\n       err => console.log(err)\r\n      )\r\n\r\n    \r\n  }\r\n\r\n\r\n  readURL(event): void \r\n  {\r\n   \r\n    \r\n    if (event.target.files && event.target.files[0])\r\n     {\r\n      this.courseImage= event.target.files[0];\r\n      //this.course.Image= this.courseImage.name;\r\n    }\r\n  \r\n  }\r\n  UpdateCourse():void\r\n  {\r\n    \r\n    this._courseSer.updateCourse(this.course,this.courseImage).subscribe(\r\n      (data: any) => {\r\n        alert(data)\r\n        this._Router.navigate([\"/courses\"]);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n}\r\n","\r\n  \r\n<form [formGroup]=\"updateCourse\" (ngSubmit)=\"UpdateCourse()\" class=\"mx-auto\" style=\"width: 50%;\">\r\n    <div class=\"form-horizontal\">\r\n        <div class=\"mx-auto d-flex justify-content-center \">\r\n            <h3 class=\" \" style=\"margin-left: 10px;\">Update Course </h3>\r\n  \r\n            <i class=\"fab fa-amazon  \" style=\"color:#ca9819;font-size:37px;margin-left: 10px; \"></i>\r\n        </div>\r\n        <hr />\r\n        <!-- <hr style=\"background-color: #f1c75f;\"/> -->\r\n  \r\n        \r\n  \r\n        <div class=\"form-group\">\r\n            <label for=\"\">Course Name</label>\r\n            <input [(ngModel)]=\"course.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\r\n  \r\n            <div [hidden]=\"updateCourse.controls['Name'].valid || updateCourse.controls['Name'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                UserName is required and must be more Than 3 Chars\r\n            </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n            <label for=\"\">Description </label>\r\n            <input [(ngModel)]=\"course.Description\" type=\"text\" class=\"form-control\" formControlName=\"Desc\" maxlength=\"126\">\r\n  \r\n            <div [hidden]=\"updateCourse.controls['Desc'].valid || updateCourse.controls['Desc'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                UserName is required and must be more Than 3 Chars\r\n            </div>\r\n        </div>\r\n  \r\n  \r\n        <div class=\"form-group\">\r\n            <label for=\"\">Max Degree</label>\r\n            <input [(ngModel)]=\"course.MaxDegree\" type=\"number\" class=\"form-control\"\r\n                formControlName=\"MaxDegree\">\r\n  \r\n            <div [hidden]=\"updateCourse.controls['MaxDegree'].valid || updateCourse.controls['MaxDegree'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                not matched\r\n            </div>\r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n            <label for=\"\">Min Degree</label>\r\n            <input [(ngModel)]=\"course.MinDegree\" type=\"number\" class=\"form-control\"\r\n                formControlName=\"MinDegree\">\r\n  \r\n            <div [hidden]=\"updateCourse.controls['MinDegree'].valid || updateCourse.controls['MinDegree'].untouched\"\r\n                class=\"alert alert-warning\">\r\n                not matched\r\n            </div>\r\n        </div>\r\n  \r\n        \r\n  \r\n        <div class=\"form-group\">\r\n            <label for=\"\">Semester</label>\r\n           \r\n            <select   class=\"form-control\" [(ngModel)]=\"course.Semester\"  formControlName=\"Semester\"> \r\n              <option value=\"1\">\r\n                \r\n                     First\r\n             </option>\r\n  \r\n             <option value=\"2\"> \r\n                \r\n                Second\r\n        </option>\r\n           </select> \r\n   \r\n        </div>\r\n  \r\n        <div class=\"form-group\">\r\n            <label for=\"\">Stage</label>\r\n           \r\n            <select   class=\"form-control\" [(ngModel)]=\"course.StageID\" formControlName=\"StageID\" > \r\n              <option *ngFor=\"let Stage of Stages\" [value]=\"Stage.id\">\r\n                \r\n                      {{Stage.name}}\r\n             </option>\r\n           </select> \r\n   \r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"\">Course Image</label><br>\r\n            <img style=\"width:200px;height:200px;\"  [src]=\"course.Image\"/>\r\n  \r\n            <input type=\"file\" (change)=\"readURL($event);\">\r\n            \r\n       </div>\r\n       <!-- -->\r\n  \r\n        <button class=\"btn mx-auto float-right\" style=\"background-color: #ca9819;\" [disabled]=\"!updateCourse.valid\"\r\n            type=\"submit\">Create</button>\r\n  \r\n    </div>\r\n  </form>","import { Component, OnInit } from '@angular/core';\nimport { ICourse } from 'src/Interfaces/icourse';\nimport { CourseService } from 'src/Services/course.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { CourseTeacher } from 'src/Interfaces/course-teacher';\n\n@Component({\n  selector: 'app-all-courses-in-category',\n  templateUrl: './all-courses-in-category.component.html',\n  styleUrls: ['./all-courses-in-category.component.css'],\n})\nexport class AllCoursesInCategoryComponent implements OnInit {\n  CourseList: CourseTeacher[];\n\n  courseCode: string;\n\n  stageName: string;\n\n  constructor(\n    private curSer: CourseService,\n    private _ActivatedRoute: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.courseCode = this._ActivatedRoute.snapshot.params['courseCode'];\n    this.stageName = this._ActivatedRoute.snapshot.params['stageId'];\n\n    this.getAllCourseInStage();\n  }\n\n  getAllCourseInStage() {\n    this.curSer\n      .GetCoursesByCodeAndStage(this.courseCode, this.stageName)\n      .subscribe(\n        (ok) => {\n          this.CourseList = ok;\n\n          console.log('getAllCourseInStage' + this.CourseList)\n\n        },\n        (err) => console.log(err)\n      );\n  }\n\n  searchByTeacherName(teacherName: string) {\n\n\n    this.curSer\n      .GetCoursesByCodeAndStage(this.courseCode, this.stageName)\n      .subscribe(\n        (ok) => {\n          this.CourseList = ok;\n          console.log(this.CourseList);\n          this.CourseList = this.CourseList.filter(\n            (crs) => crs.TeacherName == teacherName\n          );\n        },\n        (err) => console.log(err)\n      );\n\n    \n  }\n\n  takeExam(courseId:number){\n    \n  }\n\n  reset(){\n    this.getAllCourseInStage();\n\n    \n  }\n}\n","<div class=\"row\" style=\"height: 80px;margin-top: 40px;\">\n\n    <div class=\"col-lg-2\">\n        <select class=\"form-control custom-select\">\n            <option disabled>Sort</option>\n            <option value=\"\" selected>Highest Rate</option>\n            <option value=\"\">Most Relevant</option>\n            <option value=\"\">Most ReViewd</option>\n            <option value=\"\">Newest</option>\n        </select>\n    </div>\n\n    <div class=\"col-lg-10\">\n        <div style=\"display:flex; justify-content: end;\">\n            <div class=\"form-inline\">\n                <input type=\"text\" placeholder=\"Enter teacher name\" class=\"form-control\" #teacherName>\n                <button type=\"button\" class=\"form-control\" style=\"background-color: #007bff;color: white;\"\n                    (click)=\"searchByTeacherName(teacherName.value)\">\n                    <i class=\"fas fa-search\"></i>\n                    Search\n                </button>\n\n                <button type=\"button\" class=\"form-control\" style=\"background-color: #007bff;color: white;\"\n                    (click)=\"getAllCourseInStage()\">\n                    <i class=\"fas fa-redo-alt\"></i>\n                    Reset\n                </button>\n                \n            </div>\n        </div>\n    </div>\n\n</div>\n<div *ngFor=\"let c of CourseList \">\n    <div class=\"row\">\n\n        <div class=\"col-lg-2\">\n            <img [src]=\"c.Course.Image\" class=\"image image-fluid \"\n                style=\"width: 100%;    height: 170px;border:2px solid lightgray;border-radius: 3px;\">\n        </div>\n\n        <div class=\"col-lg-8\">\n            <h5 style=\"color:#222;margin-bottom: .5rem;font-weight: 400;font-weight:700\">\n                {{c.Course.Name}}\n            </h5>\n\n            <div style=\"height: 25px;overflow: hidden;\"> {{c.Course.Description | slice:0:150}} </div>\n\n            Created By Prof .<span> {{c.TeacherName}}</span><br>\n\n            <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\n            <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\n            <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\n            <i class=\"fas fa-star\" style=\"color: #eb8a2f;\"></i>\n            <i class=\"fas fa-star-half-alt\" style=\"color: #eb8a2f;\"></i><br>\n\n\n            113,902 reviews\n            80.5 total hours 400 lectures All Levels<br>\n<div  style=\"width: 35%; margin-top: 15px;\" class=\" d-flex justify-content-around border\">\n            \n            <a role=\"button\" routerLink=\"/courseinfo/{{c.Course.Id}}\" class=\"btn-gold\">Details</a>\n\n            <a role=\"button\" routerLink=\"/takeexam/{{c.Course.Id}}\" class=\"btn btn-danger\">Take Exam</a>\n\n        </div>\n            <!--<a role=\"button\" routerLink=\"/takeexam/{{c.Course.Id}}\" class=\"btn btn-info\">Details</a>-->\n\n\n\n            <!--<button type=\"button\">best Seller</button>-->\n        </div>\n\n\n    </div>\n    <hr>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { CourseService } from 'src/Services/course.service';\nimport { ChapterService } from 'src/Services/chapter.service';\nimport { LessonService } from 'src/Services/lesson.service';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { CourseTeacher } from 'src/Interfaces/course-teacher';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n\n@Component({\n  selector: 'app-course-info',\n  templateUrl: './course-info.component.html',\n  styleUrls: ['./course-info.component.css']\n})\nexport class CourseInfoComponent implements OnInit {\n\n  courseId : number;\n\n  courseDatails :any;\n\n  courseInfo : any;\n\n  constructor(private curSer: CourseService,\n    private _ActivatedRoute : ActivatedRoute,\n    private chaSer: ChapterService,\n    public LesSer: LessonService,\n    private modalService: NgbModal\n    ) { }\n\n  ngOnInit(): void {\n    this.courseId = this._ActivatedRoute.snapshot.params['CourseId'];\n    console.log('Course Code' + this.courseId)\n\n    this.getCourseDetails();\n\n    this.getAllChapter(this.courseId);\n  }\n\n  getCourseDetails(){\n    this.curSer.getCourseDetails(this.courseId).subscribe(\n      (res) => {this.courseInfo = res;\n      console.log(res)},\n      (err) => console.log(err))\n\n\n    }\n\n\n    open(content) {\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title'});//.result.then((result) => {\n   }\n\n    sort(arr:any){\n      return arr.sort((a,b)=>(a.DisplayOrder>b.DisplayOrder) ? 1 : -1);\n    }\n\n  getAllChapter(courseId : number){\n    this.curSer.getAllChapter(courseId).subscribe(\n      (res) => {this.courseDatails = res;\n      console.log(res);},\n      (err) => console.log(err))\n  }\n\n  toggle(index){\n\n    let content = document.getElementById('expanded' + index).textContent;\n\n    if(content == \"+\")\n      document.getElementById('expanded' + index).textContent = \"-\";\n    else\n      document.getElementById('expanded' + index).textContent = \"+\";\n\n    let display = document.getElementById('details' + index).style.display;\n\n      if(display == 'block')\n        document.getElementById('details' + index).style.display = 'none';\n      else\n      document.getElementById('details' + index).style.display = 'block';\n\n\n  }\n\n}\n","<div style=\"background-color: white;\">\n    <div class=\"row\" style=\"display:flex;align-items: center; background-color: #f7f8fa; height: 44px;\">\n        <div class=\"col-lg-1\"></div>\n        <div>\n            <span style=\"font-weight: 700;color: #686f7a;font-size: 13px;padding: 12px;\">\n                Stage 1\n            </span>\n            <span style=\"color: #686f7a;font-size: 13px;padding: 12px;font-weight: 400; \"> > Math</span>\n        </div>\n    </div>\n    <div class=\"row\" style=\"background-color: #29303b;\">\n        <div class=\"col-lg-1\">\n\n        </div>\n\n        <div class=\"col-lg-8\" style=\"color: white;padding-bottom: 50px;padding-top: 30px;\">\n            <h1>{{courseInfo.Course['Name']}}</h1>\n\n            <div style=\"font-size: 21px;line-height: 27px;\">\n                {{courseInfo.Course['Description']}}\n            </div>\n        </div>\n\n        <div class=\"col-lg-2\">\n            <img [src]=\"courseInfo.Course.Image\" style=\"width: 100%; height: auto;padding-top: 20px;\">\n        </div>\n\n        <div class=\"col-lg-1\">\n\n        </div>\n\n    </div>\n    <br>\n    <div class=\"row\">\n        <div class=\"col-lg-1\"></div>\n        <div class=\"col-lg-9\">\n            <div *ngFor=\"let chapters of courseDatails; let i = index\" (click)=\"toggle(i)\" style=\"margin-bottom: 3px;\">\n                <div style=\"background-color: #f9f9f9;border: solid 1px #e8e9eb;\n        padding: 10px 30px 10px 22px;cursor: pointer;\">\n\n                    <span style=\"color: #007791;font-size: 18px;font-weight: 700;\" id=\"{{'expanded' + i}}\"> + </span>\n                    <!--<span style=\"color: #007791;font-size: 18px;font-weight: 700;\"> - </span>-->\n\n                    <span style=\"font-size: 15px;padding-left: 8px;padding-right: 10px; \n                color: #505763;font-weight: 700;\">\n                        {{chapters.Name}}\n                    </span>\n                </div>\n                <div *ngFor=\"let lessons of chapters.Lessons\" id=\"{{'details' + i}}\"\n                    style=\"padding: 10px 30px 10px 48px;border: solid 1px #e8e9eb;display: none;\">\n                    <span style=\"color: #003845;text-decoration: none;cursor: pointer;\n            font-weight: 400;font-size: 14px;\">{{lessons.Name}}</span>\n\n                    <div *ngFor=\"let mat of sort(lessons.Materials)\" id=\"{{'details' + i}}\"\n                        style=\"padding: 10px 30px 10px 48px;border: solid 1px #e8e9eb\">\n\n                        <ng-template #content let-modal>\n                            <div class=\"modal-header\">\n                              <h4 class=\"modal-title\" id=\"modal-basic-title\">Display material</h4>\n                              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\n                                <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                            </div>\n                            <div class=\"modal-body\">\n                              <form>\n                                <div class=\"form-group\">\n                                  <div *ngIf=\"mat.Type.startsWith('image')\"class=\"text-center\" style=\"width: 100%; height: 100%;\">\n                                    <img src=\"{{mat.Name}}\" style=\"width: 100%; height: 100%;\"/>\n                                  </div>\n                                  <div *ngIf=\"mat.Type.startsWith('video')\"class=\"text-center\" style=\"width: 100%; height: 100%;\">\n                  \n                                  <video width=\"450\" height=\"350\" controls >\n                                      <source src=\"{{mat.Name}}\" type=\"video/mp4\" width=\"450\" height=\"350\">\n                                      <source src=\"{{mat.Name}}\" type=\"video/ogg\" width=\"450\" height=\"350\">\n                                    </video> </div>\n                  \n                                </div>\n                              </form>\n                            </div>\n                            <div class=\"modal-footer\">\n                              <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">ok</button>\n                            </div>\n                          </ng-template>\n\n                          <a *ngIf=\"mat.Type.startsWith('application')||mat.Type.startsWith('text') \" class=\"btn btn-sm btn-outline-primary\" target=\"_blank\" href=\"{{mat.Name}}\"> Open </a> \n                          <button *ngIf=\" ! mat.Type.startsWith('application')\" class=\"btn btn-sm btn-outline-primary\" (click)=\"open(content)\">Display</button> \n                  \n                        <span style=\"color: #003845;text-decoration: none;\n            font-weight: 500;font-size: 14px;\"> {{mat.Description}}</span>\n\n                    </div>\n\n\n                </div>\n\n\n\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Iuser } from 'src/Interfaces/iuser';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-student-courses',\n  templateUrl: './student-courses.component.html',\n  styleUrls: ['./student-courses.component.css']\n})\nexport class StudentCoursesComponent implements OnInit {\n\n  constructor(private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  showCourses(courseCode){\n\n    let s: Iuser=JSON.parse(localStorage.getItem('user'));\n\n\n\n    console.log('Show Courses')\n    console.log(s.Level) \n    console.log(courseCode)\n\n\n    this.router.navigate([`/allcourse/${courseCode}/${s.Level}`]);\n\n\n\n  }\n\n}\n","<div class=\"row\" style=\"height:100px ;\">\n\n</div>\n\n<div class=\"row\">\n    <div class=\"col-lg-2\">\n\n    </div>\n\n    <!-- Courses -->\n    <div class=\"col-lg-8\">\n        <div class=\"row\">\n            <div class=\"col-lg-4\">\n                <div class=\"card\" style=\"height: 220px;border-radius: 0px;cursor: pointer;\" (click)=\"showCourses('arabic')\">\n                    <img src=\"assets/320192813228911887628.jpg\" class=\"card-img-top\"\n                        style=\"height:170px;border-radius: 0px;\" alt=\"...\">\n                    <div class=\"card-body\" style=\"text-align: center;\">\n                        <h5 class=\"card-title\">Arabic Language</h5>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4\">\n                <div class=\"card\" style=\"height: 220px;border-radius: 0px;cursor: pointer;\" (click)=\"showCourses('eng')\">\n                    <img src=\"assets/its_time_to_learn_english.jpg\" class=\"card-img-top\"\n                        style=\"height:170px;border-radius: 0px;\" alt=\"...\">\n                    <div class=\"card-body\" style=\"text-align: center;\">\n                        <h5 class=\"card-title\">English Language</h5>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-lg-4\">\n                <div class=\"card\" style=\"height: 220px;border-radius: 0px;cursor: pointer;\" (click)=\"showCourses('math')\">\n                    <img src=\"assets/maths.jpg\" class=\"card-img-top\"\n                        style=\"height:170px;border-radius: 0px;\" alt=\"...\">\n                    <div class=\"card-body\" style=\"text-align: center;\">\n                        <h5 class=\"card-title\">Mathmatics</h5>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-lg-2\">\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from 'src/Services/question.service';\nimport { MCQ } from 'src/Interfaces/mcq';\nimport { TrueFalse } from 'src/Interfaces/true-false';\nimport { Answer } from 'src/Interfaces/New folder/answer';\nimport { ExamService } from 'src/Services/exam.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Iuser } from 'src/Interfaces/iuser';\n\n@Component({\n  selector: 'app-take-exam',\n  templateUrl: './take-exam.component.html',\n  styleUrls: ['./take-exam.component.css'],\n})\nexport class TakeExamComponent implements OnInit {\n  questionMCQCounter: number;\n  questionTFCounter: number;\n  curMCQQuestion: MCQ;\n  curTFQuestion: TrueFalse;\n\n  totalDegree: number;\n  isFound: boolean;\n\n  isMcq: boolean;\n  isFinish : boolean;\n  unchecked :boolean;\n\n  mcq: MCQ[];\n  tf: TrueFalse[];\n\n  MCQQuestion: Answer[] = [];\n  TFQuestion: Answer[] = [];\n\n  saveAns: boolean;\n\n  courseId : number;\n  constructor(private questionSer: QuestionService,\n    private exSer:ExamService ,\n    private _ActivatedRoute:ActivatedRoute ,) {\n    this.totalDegree = 0;\n    this.questionMCQCounter = 0;\n    this.questionTFCounter = 0;\n    this.saveAns = false;\n    this.isMcq = true;\n    this.isFinish = false;\n    this.unchecked = false;\n\n    this.courseId = this._ActivatedRoute.snapshot.params[\"courseId\"];\n\n    console.log(\"Coures ID : \" + this.courseId)\n\n    /*/this.MCQQuestion  = [\n      {questionNo : 0 , IsTrue : false },\n      {questionNo : 1 , IsTrue : false },\n      {questionNo : 2 , IsTrue : false },\n      {questionNo : 3 , IsTrue : false },\n      {questionNo : 4 , IsTrue : false },\n      {questionNo : 5 , IsTrue : false },\n      {questionNo : 6 , IsTrue : false },\n      {questionNo : 7 , IsTrue : false },\n      {questionNo : 8 , IsTrue : false },\n      {questionNo : 9 , IsTrue : false },\n    ]*/\n  }\n\n  ngOnInit(): void {\n\n    this.questionSer.getMCQQuestion(this.courseId).subscribe(\n      (res) => {\n        console.log('hi')\n        this.mcq = res;\n        this.curMCQQuestion = this.mcq[this.questionMCQCounter];\n      },\n      (err) => console.log(err)\n    );\n\n    this.questionSer.getTFQuestion(this.courseId).subscribe(\n      (res) => {\n        this.tf = res;\n        this.curTFQuestion = this.tf[this.questionTFCounter];\n        \n      },\n      (err) => console.log(err)\n    );\n  }\n\n  next(): void {\n\n    this.unchecked = false;\n   \n    if (this.isMcq) {\n      if (this.questionMCQCounter != this.mcq.length-1) {\n        ++this.questionMCQCounter;\n      }\n      else{\n        \n      this.isMcq = false;      }\n    } else {\n      \n      if (this.questionTFCounter != this.tf.length-1) {\n        ++this.questionTFCounter;\n      }\n      else{\n\n      }\n    }\n  }\n\n  pre(): void {\n    \n    console.log(\"QuestionMCQCounter : \" + this.questionMCQCounter);\n\n    if (this.isMcq) {\n      if (this.questionMCQCounter != -1) {\n        --this.questionMCQCounter;\n      }\n      else{\n      this.isMcq = false;      }\n    } else {\n      if (this.questionTFCounter != 0) {\n        --this.questionTFCounter;\n      }\n      else{\n        this.isMcq = true;\n      }\n    }\n  \n  }\n\n  chooseAnsTF(i: number, c: boolean, isTrue: boolean) {\n   // alert('is True ' + isTrue);\n\n  \n\n    this.isFound = false;\n\n    if (this.MCQQuestion.length > 0) {\n      for (let item of this.TFQuestion) {\n        if (item.questionNo == i) {\n          if (c == isTrue) item.IsTrue = true;\n          else item.IsTrue = false;\n\n          console.log('isTrue : ' + item.IsTrue);\n          this.isFound = true;\n          break;\n        }\n      }\n    }\n\n    let ans: Answer;\n\n    if (!this.isFound) {\n      if (c == isTrue) ans = { questionNo: i, IsTrue: true };\n      else ans = { questionNo: i, IsTrue: false };\n\n      this.TFQuestion.push(ans);\n    }\n  }\n\n  chooseAns(i: number, userAns: boolean) {\n\n    this.isFound = false;\n\n    if (this.MCQQuestion.length > 0) {\n      for (let item of this.MCQQuestion) {\n        if (item.questionNo == i) {\n          item.IsTrue = userAns;\n          console.log('isTrue : ' + item.IsTrue);\n          this.isFound = true;\n          break;\n        }\n      }\n    }\n\n    if (!this.isFound) {\n      let ans: Answer;\n      ans = { questionNo: i, IsTrue: userAns };\n\n      this.MCQQuestion.push(ans);\n    }\n  }\n\n  getTotalDegree() {\n    /*this.MCQQuestion.forEach((q) => {\n    if(q.IsTrue) \n    {\n      this.totalDegree += 5; \n    }\n  }\n    )\n    /*}*/\n\n    \n\n    this.isFinish = true;\n\n    this.totalDegree = 0;\n\n    console.log(this.MCQQuestion);\n\n    for (let mcq of this.MCQQuestion) {\n      if (mcq.IsTrue == true) {\n        this.totalDegree += 5;\n      }\n    }\n\n    for (let mcq of this.TFQuestion) {\n      if (mcq.IsTrue == true) {\n        this.totalDegree += 5;\n      }\n    }\n\n    //alert('You get ' + this.totalDegree);\n\n    this.saveAns = true;\n\n    this.MCQQuestion = [];\n    this.TFQuestion = [];\n\n    let s: Iuser=JSON.parse(localStorage.getItem('user'));\n            \n    this.exSer.stuent_exam(this.courseId , s.Id , this.totalDegree).subscribe(\n\n      (ok)=>console.log(ok),\n      (err)=>console.log(err)\n    )\n  }\n}\n","<div *ngIf=\"!isFinish\">\n    <div class=\"MCQuestions\"\n        style=\"background-color: #f4f4f4;margin-top: 20px;padding-left: 30px;padding: 20px;margin: 15px;\" id=\"MC\">\n        <div>\n\n\n\n            <div class=\"form-group\" *ngFor=\"let question of mcq;let i= index;\">\n                <div [hidden]=\"!(i == questionMCQCounter && isMcq)\">\n                    <div class=\"row\">\n                        <div class=\"\" style=\"font-weight: 700;\n                    color: white;\n                    background-color: black;\n                    width: 25px;\n                    height: 25px;\n                    border-radius: 50%;\n                    text-align: center;\n                    margin-left: 20px;\n                \">{{i + 1}}\n                        </div>\n                        <!-- <label for=\"\" style=\"border: 1px solid lightgray\" id=\"question + i\">{{questionCounter}}</label>-->&nbsp;&nbsp;&nbsp;\n                        <span\n                            style=\"font-weight: 400;line-height: 1.5em;font:100%/1.5 Source Sans Pro,Arial,Helvetica Neue,Helvetica,'sans-serif';\">{{question.Question.QuestionContent}}</span>\n                        <!--<input  type=\"text\" [value]=\"curQuestion.Question.QuestionContent\" disabled\n                        placeholder=\"Input your question title here\" class=\"form-control\"\n                         style=\"max-width: 90%;\">-->\n\n\n                    </div>\n\n                    <div class=\"row\" id=\"option1\" class=\"\" *ngFor=\"let option of question.Choices\"\n                        style=\"padding-left: 50px;align-items: center;padding-top: 10px;\">\n\n                        <label class=\"\"\n                            style=\"background-color: rgb(250, 250, 250);border: 1px solid lightgray;border-radius: 8px;padding: 8px 8px 8px 48px;width: 480px;\">\n                            <input type=\"radio\" class=\"form-check-input \"\n                                (click)=\"chooseAns(questionMCQCounter,option.IsTrue)\" [name]=\"i\"\n                                style=\" width: 20px;height: 20px;margin-top: 2px;\">\n                            <span style=\"padding-left: 10px;\">{{option.Choice}}</span>\n                        </label>\n                    </div>\n\n                </div>\n            </div>\n\n\n            <div class=\"form-group\" *ngFor=\"let q of tf;let i= index\">\n                <div  [hidden]=\"!(i == questionTFCounter && !isMcq)\">\n                    <div>\n                        <div class=\"\" style=\"font-weight: 700;\n                    color: white;\n                    background-color: black;\n                    width: 25px;\n                    height: 25px;\n                    border-radius: 50%;\n                    text-align: center;\n                    margin-left: 20px;\n                    display: inline-block;\n                \">{{i + 1}}</div>\n                        <!-- <label for=\"\" style=\"border: 1px solid lightgray\" id=\"question + i\">{{questionCounter}}</label>-->&nbsp;&nbsp;&nbsp;\n                        <span\n                            style=\"font-weight: 400;line-height: 1.5em;font:100%/1.5 Source Sans Pro,Arial,Helvetica Neue,Helvetica,'sans-serif';\">{{q.Question.QuestionContent}}</span>\n                        <!--<input  type=\"text\" [value]=\"curQuestion.Question.QuestionContent\" disabled\n                        placeholder=\"Input your question title here\" class=\"form-control\"\n                         style=\"max-width: 90%;\">-->\n\n                    </div>\n\n                    <!--<div class=\"row\" style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;padding-top: 25px;\">\n                    <input type=\"radio\" class=\"form-check-input\" (click)=\"\"\n                        [name]=\"i\" style=\"width: 20px;height: 20px;\">\n                    <input type=\"text\" class=\"form-control\" value=\"True\" disabled style=\"max-width: 60%;\">\n                </div>-->\n\n                <br>\n                    <div class=\"\" style=\"background-color: rgb(250, 250, 250);border: 1px solid lightgray;border-radius: 8px;padding: 8px 8px 8px 48px;width: 480px;\n                        margin-top: 20px;margin-left: 45px;\">\n                        <input type=\"radio\" class=\"form-check-input\" (click)=\"chooseAnsTF(i,true ,q.CorrectAnswer)\"\n                            [name]=\"i\" style=\" width: 20px;height: 20px;margin-top: 2px;\">\n                        <span style=\"padding-left: 10px;\">True</span>\n                    </div>\n\n\n                    <!--<div class=\"row\" style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;padding-top: 25px;\">\n                    <input type=\"radio\" class=\"form-check-input\" (click)=\"chooseAnsTF(i,false,q.CorrectAnswer)\"\n                        [name]=\"i\" style=\"width: 20px;height: 20px;\">\n                    <input type=\"text\" class=\"form-control\" value=\"False\" disabled style=\"max-width: 60%;\">\n                </div>-->\n\n                    <div style=\"background-color: rgb(250, 250, 250);border: 1px solid lightgray;border-radius: 8px;padding: 8px 8px 8px 48px;width: 480px;\n                        margin-top: 20px;margin-left: 45px;\">\n                        <input type=\"radio\" class=\"form-check-input\" (click)=\"chooseAnsTF(i,false ,q.CorrectAnswer)\"\n                            [name]=\"i\" style=\" width: 20px;height: 20px;margin-top: 2px;\">\n                        <span style=\"padding-left: 10px;\">False</span>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n    <button type=\"button\" class=\"btn btn-outline-info float-right\" (click)=\"next(); \" *ngIf=\"questionTFCounter != tf.length-1\">\n        Next >></button>\n\n\n    <button type=\"button\" id=\"btnPre\" class=\"btn btn-outline-info float-left\" (click)=\"pre()\"\n        [disabled]=\"questionMCQCounter == 0\">\n        << Pre </button>\n\n            <button type=\"button\" id=\"btnFinish\" class=\"btn btn-outline-info float-right\" (click)=\"getTotalDegree()\"\n                *ngIf=\"questionTFCounter == tf.length-1\">\n                Finish </button>\n\n\n</div>\n\n<div *ngIf=\"isFinish\">\n\n    <div class=\"MCQuestions\"\n        style=\"background-color: #f4f4f4;margin-top: 20px;padding-left: 30px;padding: 20px;margin: 15px;\" id=\"MC\">\n        <div>\n            <div class=\"alert alert-primary\" role=\"alert\">\n                Total correct answer is {{totalDegree}}\n            </div>\n\n\n\n            <div class=\"form-group\" *ngFor=\"let question of mcq;let i= index;\"\n                style=\"border-bottom:  1px  dashed lightblue;\">\n                <div style=\"font-size: 18px;color: #3b5a95;margin: 15px 0 15px 0;\">Question #{{i + 1}}</div>\n                <div class=\"row\">\n                    <label for=\"\" style=\"margin-left: 20px;border: 1px solid lightgray\"\n                        id=\"question + i\">{{i+1}}</label>&nbsp;&nbsp;&nbsp;\n                    <input type=\"text\" [value]=\"question.Question.QuestionContent\" disabled\n                        placeholder=\"Input your question title here\" class=\"form-control\" style=\"max-width: 90%;\">\n\n\n                </div>\n\n                <div class=\"row\" id=\"option1\" *ngFor=\"let option of question.Choices\"\n                    style=\"padding-left: 50px;align-items: center;padding-top: 25px;\">\n                    <!--<input type=\"radio\" class=\"form-check-input\" (click)=\"chooseAns(i,option.IsTrue)\"  [name]=\"i\" \n                                        style=\"width: 20px;height: 20px;\">-->\n\n                    <div *ngIf=\"option.IsTrue\">\n                        <span style=\"font-size: 18px;color: #3b5a95;margin: 15px 0 15px 0;\"> Correct Answer\n                            : </span>\n                        <span style=\"font-size: 15px;color: #2590e3;\">{{option.Choice}} </span>\n                    </div>\n\n                </div>\n\n\n            </div>\n\n\n            <div class=\"form-group\" style=\"padding-bottom: px;padding-top: 20px;border-bottom: 1px dashed lightblue;\"\n                *ngFor=\"let q of tf;let i= index\">\n                <div class=\"row\" style=\"padding-bottom: 20px;\">\n                    <label for=\"\"\n                        style=\"margin-left: 20px;border: 1px solid lightgray\">{{i+3}}</label>&nbsp;&nbsp;&nbsp;\n                    <input type=\"text\" [value]=\"q.Question.QuestionContent\" disabled\n                        placeholder=\"Input your question title here\" class=\"form-control\" style=\"max-width: 90%;\">\n\n                </div>\n\n                <div style=\"margin-left: 25px;\">\n                    <span style=\"font-size: 18px;color: #3b5a95;margin: 15px 0 15px 0;\"> Correct Answer\n                        : </span>\n                    <span style=\"font-size: 15px;color: #2590e3;\">{{q.CorrectAnswer}} </span>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { IChapter } from 'src/Interfaces/ichapter';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthuserService } from 'src/Services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CourseService } from 'src/Services/course.service';\nimport { ICourse } from 'src/Interfaces/icourse';\nimport { ChapterService } from 'src/Services/chapter.service';\n\n@Component({\n  selector: 'app-chapter',\n  templateUrl: './chapter.component.html',\n  styleUrls: ['./chapter.component.css']\n})\nexport class ChapterComponent implements OnInit {\n  AddChapterForm:boolean;\n  EditChapterForm:boolean;\n  ChaptersList:IChapter[];\n  chapter: IChapter;\n  EditedChapter:IChapter;\n  CourseCode:string;\n  course:ICourse;\n  ChapterForm: FormGroup;\n  EditedChapterForm: FormGroup;\n  constructor(\n    private user: AuthuserService,\n    private route: Router,\n    private FB: FormBuilder,\n    private _ActivatedRoute:ActivatedRoute ,\n    private _courseSer : CourseService,\n    private _chapterSer : ChapterService\n\n\n  ) {\n    this.chapter = {\n      ID:0,\n      Name: '',\n      CourseId : parseInt(this._ActivatedRoute.snapshot.params[\"CourseId\"]),\n      Description:'',\n      CourseCode:this._ActivatedRoute.snapshot.params[\"CourseCode\"]\n    };\n    this.EditedChapter = {\n      ID:0,\n      Name: '',\n      CourseId : parseInt(this._ActivatedRoute.snapshot.params[\"CourseId\"]),\n      Description:'',\n      CourseCode:this._ActivatedRoute.snapshot.params[\"CourseCode\"]\n    };\n    this.AddChapterForm=false;\n    this.EditChapterForm=false;\n   }\n  \n  ngOnInit(): void {\n    this.ChapterForm = this.FB.group({\n      Name:['', [Validators.required, Validators.minLength(3)]],\n      Description: ['', [Validators.required, Validators.minLength(3)]]\n    });\n    this.CourseCode = this._ActivatedRoute.snapshot.params[\"CourseId\"];\n\n    this._courseSer.GetCourseByCode(parseInt(this.CourseCode))\n    .subscribe(\n     res => {\n       this.course = res,\n         console.log(res)\n       },\n       err => console.log(err)\n      )\n     //this.chapter.CourseCode=this.course.Code;\n\n      this.CourseCode = this._ActivatedRoute.snapshot.params[\"CourseId\"]\n     this._chapterSer.GetChaptersByCourseCode(parseInt(this.CourseCode)).subscribe(\n      res => {\n        this.ChaptersList = res,\n          console.log(res)\n        },\n        err => console.log(err)\n     );\n     \n  }\n\n  changeAddChapterForm(){\n    if(this.AddChapterForm){\n      this.AddChapterForm=false;\n    }else{\n      this.AddChapterForm=true;\n      this.EditChapterForm=false;\n    }\n  }\n  changeEditChapterForm(c){\n    this.EditedChapter=c;\n    if(this.EditChapterForm){\n      this.EditChapterForm=false\n    }else{\n      this.EditChapterForm=true;\n      this.AddChapterForm=false;\n    }\n  }\n\n  addChapter(Name:string,Description:string) {\n    console.log('course Code ' + this._ActivatedRoute.snapshot.params[\"CourseId\"])\n    this._chapterSer.createChapter(this.chapter).subscribe\n     (\n       succ=>{\n        this._chapterSer.GetChaptersByCourseCode(parseInt(this._ActivatedRoute.snapshot.params[\"CourseId\"])).subscribe(\n          res => {\n            this.ChaptersList = res,\n              console.log(res)\n            },\n            err => console.log(err)\n         );\n       },\n       err=>alert(err)\n     )\n  }\n\n  editChapter(Name:string,Description:string){\n    this.EditedChapter.Name=Name;\n    this.EditedChapter.Description=Description;\n    this._chapterSer.EditChapter(this.EditedChapter).subscribe\n     (\n       succ=>{\n        this._chapterSer.GetChaptersByCourseCode(parseInt(this._ActivatedRoute.snapshot.params[\"CourseId\"])).subscribe(\n          res => {\n            this.ChaptersList = res,\n              console.log(res)\n            },\n            err => console.log(err)\n         );\n       },\n       err=>alert(err)\n     )\n  }\n\n  changeChapterID(chapter:IChapter){\n    this._chapterSer.ChapterInfo=chapter;\n    this._chapterSer.changeChapter(chapter.ID.toString());\n    //  this._chapterSer.currentMessage.subscribe(\n    //    response=>\n    //   { //this.AllProductsCount =response.toString();\n    //    });\n\n  }\n\n  deleteChapter(C:IChapter){\n    this._chapterSer.DeleteChapterByID(C.ID).subscribe(\n      succ=>{\n        this._chapterSer.GetChaptersByCourseCode(parseInt(this._ActivatedRoute.snapshot.params[\"CourseId\"])).subscribe(\n          res => {\n            this.ChaptersList = res,\n              console.log(res)\n            },\n            err => console.log(err)\n         );\n       },\n       err=>alert(err)\n    );\n  }\n\n\n  \n}\n\n","\n<br>\n<div class=\"form-group col-12\">\n  <div class=\"form-group col-12\">\n    <button class=\"btn-gold\"  type=\"button\" (click)=\"changeAddChapterForm()\">Add Chapter</button>\n  </div>\n  <div class=\"form-group col-12\" *ngIf=\"AddChapterForm\" >\n    <h5 class=\"text-center \">Add Chapter</h5>\n    <form class=\"form-group col-12\" [formGroup]=\"ChapterForm\" (ngSubmit)=\"addChapter(Name.value , Description.value)\" [formGroup]=\"ChapterForm\">\n      <div class=\"form-group col-12\">\n          <label for=\"\">Chapter Name</label>\n          <input #Name [(ngModel)]=\"chapter.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\n  \n          <div [hidden]=\"ChapterForm.controls['Name'].valid || ChapterForm.controls['Name'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <div class=\"form-group col-12\">\n          <label for=\"\">Add Description</label>\n          <input #Description [(ngModel)]=\"chapter.Description\" type=\"text\" class=\"form-control\" formControlName=\"Description\">\n  \n          <div [hidden]=\"ChapterForm.controls['Description'].valid || ChapterForm.controls['Description'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <br>\n      <div class=\"form-group col-12\">\n        <button class=\"btn btn-outline-info\" [disabled]=\"!ChapterForm.valid\"  type=\"submit\">Add</button> \n        <button class=\"btn btn-outline-danger\" style=\"margin-left: 5px;\" (click)=\"changeAddChapterForm()\" type=\"button\">Cancel</button>\n      </div>\n      \n  </form>\n  </div>\n\n  <div class=\"form-group col-12\" *ngIf=\"EditChapterForm\" >\n    <h5 class=\"text-center\">Edit Chapter</h5>\n    <form class=\"form-group col-12\"  [formGroup]=\"EditedChapterForm\" (ngSubmit)=\"editChapter(EditedName.value,EditedDescription.value)\" [formGroup]=\"ChapterForm\">\n      <div class=\"form-group col-12\">\n          <label for=\"\">Edit Chapter Name</label>\n          <input #EditedName [ngModel]=\"EditedChapter.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\n  \n          <div [hidden]=\"ChapterForm.controls['Name'].valid || ChapterForm.controls['Name'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <div class=\"form-group col-12\">\n          <label for=\"\">Edit Description</label>\n          <input #EditedDescription [ngModel]=\"EditedChapter.Description\" type=\"text\" class=\"form-control\" formControlName=\"Description\">\n  \n          <div [hidden]=\"ChapterForm.controls['Description'].valid || ChapterForm.controls['Description'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <br>\n      <div class=\"form-group col-12\">\n        <button class=\"btn-outline-success\"  type=\"submit\">Edit</button> \n        <button class=\"btn-outline-danger\" style=\"margin-left: 5px;\" (click)=\"changeEditChapterForm(EditedChapter.ID)\" type=\"button\">Cancel</button>\n      </div>\n      \n  </form>\n  </div>\n  \n</div>\n\n<!-- <form class=\"form-group col-12\" (ngSubmit)=\"addChapter(Name.value , Description.value)\" [formGroup]=\"ChapterForm\">\n    <div class=\"form-group col-12\">\n        <label for=\"\">Add Chapter </label>\n        <input #Name [(ngModel)]=\"chapter.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\n\n        <div [hidden]=\"ChapterForm.controls['Name'].valid || ChapterForm.controls['Name'].untouched\"\n            class=\"alert alert-warning\">\n            Must be more than 3 Characters\n        </div>\n        \n    </div>\n    <div class=\"form-group col-12\">\n        <label for=\"\">Add Description</label>\n        <input #Description [(ngModel)]=\"chapter.Description\" type=\"text\" class=\"form-control\" formControlName=\"Description\">\n\n        <div [hidden]=\"ChapterForm.controls['Description'].valid || ChapterForm.controls['Description'].untouched\"\n            class=\"alert alert-warning\">\n            Must be more than 3 Characters\n        </div>\n        \n    </div>\n    <br>\n    <div class=\"form-group col-12\">\n      <button class=\"btn-success\"  type=\"submit\">Add</button>\n    </div>\n    \n</form> -->\n\n<!-- <table class=\"table\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">View</th>\n        <th scope=\"col\">Edit</th>\n        <th scope=\"col\">Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let Chapter of ChaptersList ;let i=index\">\n        <th scope=\"row\">{{Chapter.Name}}</th>\n        <th scope=\"row\">{{Chapter.Description}}</th>\n        <td>\n          <a  (click)=\"changeChapterID(Chapter)\"class=\"btn btn-success\">\n          <i class=\"fas fa-edit\"></i> View\n          </a>\n        </td>\n        <td>\n          <a class=\"btn btn-info\">\n          <i class=\"fas fa-edit\"></i> Edit\n          </a>\n        </td>\n        <td>\n          <a class=\"btn btn-danger\">\n          <i class=\"fas fa-edit\"></i> Delete\n          </a>\n        </td>\n        \n      </tr>\n    </tbody>\n  </table> -->\n<br/>\n<h3 class=\"text-center\">Course Chapters </h3>\n<div class=\"row\" *ngFor=\"let Chapter of ChaptersList ;let i=index\"\n    style=\"border-top: 0.7px solid #CDCDCD;border-bottom: 0.7px solid #CDCDCD;padding: 20px;border-radius:20px;\">\n    <div class=\"col-lg-10 col-9 \"\n            style=\"font-family: sf pro display,-apple-system,BlinkMacSystemFont,Roboto,segoe ui,Helvetica,Arial,sans-serif,apple color emoji,segoe ui emoji,segoe ui symbol;;\">\n            <h6 style=\"color:#222;margin-bottom: .5rem;font-weight: 400;font-weight:700\">\n                    {{Chapter.Name}}\n            </h6>\n            <div> {{Chapter.Description}} </div>\n          <br>\n            \n            <a role=\"button\" (click)=\"changeChapterID(Chapter)\"\n                    class=\"btn btn-outline-info\">View Lessons</a>\n\n\n\n            <!--<button type=\"button\">best Seller</button>-->\n    </div>\n\n    <div class=\"col-lg-2 col-3\">\n            <a class=\" btn-gold\" style=\"text-decoration:none;margin-bottom: 5px;\"\n                  (click)=\"changeEditChapterForm(Chapter)\">\n                    <i class=\" fas fa-sync-alt\"></i> </a><br>\n\n            <a class=\"btn btn-danger\" style=\"text-decoration:none\"\n                    (click)=\"deleteChapter(Chapter)\">\n                    <i class=\"far fa-trash-alt\"></i>\n            </a>\n\n    </div>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ICourse } from 'src/Interfaces/icourse';\nimport { CourseService } from 'src/Services/course.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-course-details',\n  templateUrl: './course-details.component.html',\n  styleUrls: ['./course-details.component.css']\n})\nexport class CourseDetailsComponent implements OnInit {\n  // course:ICourse={Code:\"\",Description:\"\",Image:\"\",\n  // MaxDegree:null,MinDegree:null,Name:\"\",Semester:null,StageID:null};\n  // name:string=\"\";\n  course:ICourse;\n  constructor(\n    private _courseSer : CourseService,\n    private _ActivatedRoute:ActivatedRoute \n\n  ) {}\n\n  ngOnInit(): void {\n    // alert(this._ActivatedRoute.snapshot.params['CourseCode']);\n    // this._courseSer.GetCourseByCode(this._ActivatedRoute.snapshot.params['CourseCode']).subscribe(\n    //   arg =>{ this.course = arg\n    //   this.name=this.course.Name;\n    //   alert(this.name);\n    //   },\n    //   err=>console.log(err)\n      \n    //   );\n    \n  }\n\n}\n","<div class=\"row\">\n    <!-- {{this.course.Name}}\n    {{this.name}} -->\n    <div class=\"col-5\">\n        <app-chapter></app-chapter>\n    </div>\n    <div class=\"col-1\"></div>\n    <div class=\"col-6\">\n        <app-lesson></app-lesson>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { AuthuserService } from 'src/Services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ChapterService } from 'src/Services/chapter.service';\nimport { IChapter } from 'src/Interfaces/ichapter';\nimport { LessonService } from 'src/Services/lesson.service';\nimport { ILesson } from 'src/Interfaces/ilesson';\n\n@Component({\n  selector: 'app-lesson',\n  templateUrl: './lesson.component.html',\n  styleUrls: ['./lesson.component.css']\n})\n\nexport class LessonComponent implements OnInit {\n  \n  LessonsList : ILesson[];\n  lesson: ILesson;\n  EditedLesson: ILesson;\n\n  ChapterID:number;\n  Chapter:IChapter;\n  LessonForm: FormGroup;\n  EditedLessonForm:FormGroup;\n  AddLessonForm:boolean ;\n  EditLessonForm:boolean ;\n\n  constructor(\n    private user: AuthuserService,\n    private route: Router,\n    private FB: FormBuilder,\n    private _ActivatedRoute:ActivatedRoute ,\n    public _chapterSer : ChapterService,\n    public _lessonSer : LessonService\n  ) { \n    this.lesson = {\n      ID:0,\n      Name: '',\n      Description:'',\n      ChapterID:this._chapterSer.ChapterInfo.ID\n    };\n\n    this.AddLessonForm=false;\n    this.EditLessonForm=false;\n  }\n  ngOnInit(): void {\n    this.LessonForm = this.FB.group({\n      Name:['', [Validators.required, Validators.minLength(3)]],\n      Description: ['', [Validators.required, Validators.minLength(3)]]\n    });\n\n    this.EditedLessonForm = this.FB.group({\n      Name:['', [Validators.required, Validators.minLength(3)]],\n      Description: ['', [Validators.required, Validators.minLength(3)]]\n    });\n    \n    // alert(this._chapterSer.ChapterInfo.ID);\n    \n    // this._lessonSer.GetLessonsByChapter(this._chapterSer.ChapterInfo.ID).subscribe\n    // (\n    //   data=>{\n    //     console.log(data);\n    //     this.LessonsList=data;\n    //   }\n    // )\n    this._chapterSer.currentMessage.subscribe(\n    response=>\n    { \n      //this.AllProductsCount =response.toString();\n      this._lessonSer.GetLessonsByChapter(parseInt(response)).subscribe\n    (\n      data=>{\n        console.log(data);\n        this.LessonsList=data;\n        this.lesson.ChapterID=this._chapterSer.ChapterInfo.ID;\n      }\n    );\n    });\n\n  }\n\n  // ViewThisChapter(chapterID:number){\n  //   this._lessonSer.GetLessonsByChapter(chapterID).subscribe\n  //   (\n  //     data=>{\n  //       console.log(data);\n  //       this.LessonsList=data;\n  //     }\n  //   );\n  // }\n\n  changeAddLessonForm() {\n    if(this.AddLessonForm){\n      this.AddLessonForm=false;\n    }else{\n      this.AddLessonForm=true;\n      this.EditLessonForm=false;\n    }\n  }\n\n  changeEditLessonForm(L){\n    this.EditedLesson=L;\n    if(this.EditLessonForm){\n      this.EditLessonForm=false\n    }else{\n      this.EditLessonForm=true;\n      this.AddLessonForm=false;\n    }\n  }\n\n  addLesson() {\n    this._lessonSer.createLesson(this.lesson).subscribe\n     (\n       succ=>{\n        this._lessonSer.GetLessonsByChapter(this.lesson.ChapterID).subscribe(\n          res => {\n            this.LessonsList = res,\n              console.log(res)\n            },\n            err => console.log(err)\n         );\n       },\n       err=>alert(err)\n     )\n     this.changeAddLessonForm();\n  }\n\n  editLesson(Name:string,Description:string){\n    this.EditedLesson.Name=Name;\n    this.EditedLesson.Description=Description;\n    this._lessonSer.EditLesson(this.EditedLesson).subscribe\n     (\n       succ=>{\n        this._lessonSer.GetLessonsByChapter(this.EditedLesson.ChapterID).subscribe(\n          res => {\n            this.LessonsList = res,\n              console.log(res)\n            },\n            err => console.log(err)\n         );\n       },\n       err=>alert(err)\n     )\n     this.changeEditLessonForm(this.EditedLesson);\n  }\n\n  deleteLesson(L:ILesson){\n    this._lessonSer.DeleteLessonByID(L.ID).subscribe(\n      succ=>{\n        this._lessonSer.GetLessonsByChapter(this.lesson.ChapterID).subscribe(\n          res => {\n            this.LessonsList = res,\n              console.log(res)\n            },\n            err => console.log(err)\n         );\n       },\n       err=>alert(err)\n    );\n  }\n  \n\n}\n","<h3  *ngIf=\"this._chapterSer.ChapterInfo.ID!=null\" class=\"text-center\">Chapter : {{this._chapterSer.ChapterInfo.Name}}</h3>\n\n<div class=\"form-group col-12\" *ngIf=\"this._chapterSer.ChapterInfo.ID!=null\">\n  <div class=\"form-group col-12\">\n    <button class=\"btn-gold\"  type=\"button\" (click)=\"changeAddLessonForm()\">Add Lesson</button>\n  </div>\n  <div class=\"form-group col-12\" *ngIf=\"AddLessonForm\" >\n    <h5 class=\"text-center\">Add Lesson</h5>\n    <form class=\"form-group col-12\" [formGroup]=\"LessonForm\" (ngSubmit)=\"addLesson()\" [formGroup]=\"LessonForm\">\n      <div class=\"form-group col-12\">\n          <label for=\"\">Lesson Name</label>\n          <input #Name [(ngModel)]=\"lesson.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\n  \n          <div [hidden]=\"LessonForm.controls['Name'].valid || LessonForm.controls['Name'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <div class=\"form-group col-12\">\n          <label for=\"\">Add Description</label>\n          <input #Description [(ngModel)]=\"lesson.Description\" type=\"text\" class=\"form-control\" formControlName=\"Description\">\n  \n          <div [hidden]=\"LessonForm.controls['Description'].valid || LessonForm.controls['Description'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <br>\n      <div class=\"form-group col-12\">\n        <button class=\"btn btn-outline-info\"  type=\"submit\">Add</button> \n        <button class=\"btn btn-outline-danger\" style=\"margin-left: 5px;\" (click)=\"changeAddLessonForm()\" type=\"button\">Cancel</button>\n      </div>\n      \n  </form>\n  </div>\n\n  <div class=\"form-group col-12\" *ngIf=\"EditLessonForm\" >\n    <h5 class=\"text-center\">Edit Lesson</h5>\n    <form class=\"form-group col-12\"  [formGroup]=\"EditedLessonForm\" (ngSubmit)=\"editLesson(EditedName.value,EditedDescription.value)\" >\n      <div class=\"form-group col-12\">\n          <label for=\"\">Edit Lesson Name</label>\n          <input #EditedName [ngModel]=\"EditedLesson.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\n  \n          <div [hidden]=\"EditedLessonForm.controls['Name'].valid || EditedLessonForm.controls['Name'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <div class=\"form-group col-12\">\n          <label for=\"\">Edit Description</label>\n          <input #EditedDescription [ngModel]=\"EditedLesson.Description\" type=\"text\" class=\"form-control\" formControlName=\"Description\">\n  \n          <div [hidden]=\"EditedLessonForm.controls['Description'].valid || LessonForm.controls['Description'].untouched\"\n              class=\"alert alert-warning\">\n              Must be more than 3 Characters\n          </div>\n          \n      </div>\n      <br>\n      <div class=\"form-group col-12\">\n        <button class=\"btn-outline-success\"  type=\"submit\">Edit</button> \n        <button class=\"btn-outline-danger\" style=\"margin-left: 5px;\" (click)=\"changeEditLessonForm(EditedLesson)\" type=\"button\">Cancel</button>\n      </div>\n      \n  </form>\n  </div>\n  \n</div>\n\n<!-- <form *ngIf=\"this._chapterSer.ChapterInfo.ID!=null\" class=\"form-group col-12\" (ngSubmit)=\"addLesson(Name.value , Description.value)\" [formGroup]=\"LessonForm\">\n    <div class=\"form-group col-4\">\n        <label for=\"\">Add Lesson </label>\n        <input #Name [(ngModel)]=\"lesson.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\n\n        <div [hidden]=\"LessonForm.controls['Name'].valid || LessonForm.controls['Name'].untouched\"\n            class=\"alert alert-warning\">\n            Must be more than 3 Characters\n        </div>\n        \n    </div>\n    <div class=\"form-group col-4\">\n        <label for=\"\">Add Description</label>\n        <input #Description [(ngModel)]=\"lesson.Description\" type=\"text\" class=\"form-control\" formControlName=\"Description\">\n\n        <div [hidden]=\"LessonForm.controls['Description'].valid || LessonForm.controls['Description'].untouched\"\n            class=\"alert alert-warning\">\n            Must be more than 3 Characters\n        </div>\n        \n    </div>\n    <button class=\"btn-primary\"  type=\"submit\">Add</button>\n</form> -->\n\n\n\n\n\n<!-- <table class=\"table\" *ngIf=\"this._chapterSer.ChapterInfo.ID!=null\"> \n    <thead class=\"thead-dark\">\n      <tr>\n        <th scope=\"col\">Name</th>\n        <th scope=\"col\">Description</th>\n        <th scope=\"col\">Material</th>\n        <th scope=\"col\">Edit</th>\n        <th scope=\"col\">Delete</th>\n\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let lesson of LessonsList ;let i=index\">\n        <th>{{lesson.Name}}</th>\n        <th>{{lesson.Description}}</th>\n        <td>\n          <a  class=\"btn btn-success\">\n          <i class=\"fas fa-edit\"></i> Material\n          </a>\n        </td>\n        <td>\n          <a class=\"btn btn-info\">\n          <i class=\"fas fa-edit\"></i> Edit\n          </a>\n        </td>\n        <td>\n          <a class=\"btn btn-danger\">\n          <i class=\"fas fa-edit\"></i> Delete\n          </a>\n        </td>\n      </tr>\n    </tbody>\n  </table> -->\n\n\n  <h3 class=\"text-center\" *ngIf=\"this._chapterSer.ChapterInfo.ID!=null\">Chapter Lessons </h3>\n  <div class=\"row\"  *ngFor=\"let Lesson of LessonsList ;let i=index\" \n      style=\"border-top: 0.7px solid #CDCDCD;border-bottom: 0.7px solid #CDCDCD;padding: 20px;border-radius:20px;\">\n      <div class=\"col-lg-10 col-9 \"\n              style=\"font-family: sf pro display,-apple-system,BlinkMacSystemFont,Roboto,segoe ui,Helvetica,Arial,sans-serif,apple color emoji,segoe ui emoji,segoe ui symbol;;\">\n              <h6 style=\"color:#222;margin-bottom: .5rem;font-weight: 400;font-weight:700\">\n                      {{Lesson.Name}}\n              </h6>\n              <div> {{Lesson.Description}} </div>\n            <br>\n              \n              <a role=\"button\"  routerLink=\"/Material/lesson/{{Lesson.ID}}\"\n                      class=\"btn btn-outline-info\">View Material</a>\n  \n                     \n  \n              <!--<button type=\"button\">best Seller</button>-->\n      </div>\n  \n      <div class=\"col-lg-2 col-3\">\n              <a class=\"btn-gold\" style=\"text-decoration:none;margin-bottom: 5px;\"\n                    (click)=\"changeEditLessonForm(Lesson)\">\n                      <i class=\" fas fa-sync-alt\"></i> </a><br>\n  \n              <a class=\"btn btn-danger\" style=\"text-decoration:none\"\n                      (click)=\"deleteLesson(Lesson)\">\n                      <i class=\"far fa-trash-alt\"></i>\n              </a>\n  \n      </div>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MCQ } from 'src/Interfaces/mcq';\nimport { QuestionService } from 'src/Services/question.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { TrueFalse } from 'src/Interfaces/true-false';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-exam',\n  templateUrl: './exam.component.html',\n  styleUrls: ['./exam.component.css'],\n})\nexport class ExamComponent implements OnInit {\n  isExpand: boolean;\n\n  elem: any;\n  mcq: MCQ;\n  ch1: string;\n  ch2: string;\n  ch3: string;\n  ch4: string;\n  ch5: string;\n  ch6: string;\n\n  ch11: boolean;\n  ch12: boolean;\n  ch13: boolean;\n  ch14: boolean;\n  ch15: boolean;\n  ch16: boolean;\n\n  ChoiseQues: FormGroup;\n  TFQ: TrueFalse;\n  TFQues: FormGroup;\n  courseId : number\nIsSelected:boolean;\n  option: number;\n  constructor(\n    private FB: FormBuilder,\n    private QuestionSer: QuestionService,\n    private toastr: ToastrService,\n    private _ActivatedRoute: ActivatedRoute\n  ) {\n    this.isExpand = false;\n    this.option = 2;\nthis.IsSelected=false;\n    this.TFQ = {\n      QuestionID: 0,\n      Question: { ID: 0, QuestionContent: 'T or F' },\n      CorrectAnswer: true,\n    };\n\n    this.mcq = {\n      QuestionID: 0,\n      Question: {\n        ID: 0,\n        QuestionContent: '',\n      },\n      Choices: [\n        { choice: '', IsTrue: false },\n        { choice: '', IsTrue: false },\n        { choice: '', IsTrue: false },\n        { choice: '', IsTrue: false },\n        { choice: '', IsTrue: false },\n        { choice: '', IsTrue: false },\n      ],\n    };\n\n    this.courseId = this._ActivatedRoute.snapshot.params['CourseId'];\n\n    this.ch1 = '';\n    this.ch2 = '';\n    this.ch3 = '';\n\n    this.ch4 = '';\n    this.ch5 = '';\n    this.ch6 = '';\n\n    \n    this.ch11 = false;\n    this.ch12 = false;\n    this.ch13 = false;\n\n    this.ch14 = false;\n    this.ch15 = false;\n    this.ch16 = false;\n  }\n\n  ngOnInit(): void {\n    this.ChoiseQues = this.FB.group({\n      QuestionContent: ['', [Validators.required]],\n      Choices: ['', [Validators.required]],\n      ch1: ['', [Validators.required]],\n      ch2: ['', [Validators.required]],\n      ch3: ['', [Validators.required]],\n      ch4: ['', [Validators.required]],\n      ch5: ['', [Validators.required]],\n      ch6: ['', [Validators.required]],\n\n\n      ch11: ['', [Validators.required]],\n      ch12: ['', [Validators.required]],\n      ch13: ['', [Validators.required]],\n      ch14: ['', [Validators.required]],\n      ch15: ['', [Validators.required]],\n      ch16: ['', [Validators.required]],\n    });\n\n    this.TFQues = this.FB.group({\n      TFQuestionContent: ['', [Validators.required]],\n      CorrectAnswer: ['', [Validators.required]],\n    });\n  }\n\n  AddTFQuestion() {\n    document.getElementById('TF').style.display = 'block';\n     document.getElementById(\"TF\").style.backgroundColor = \" #f4f4f4\";\n    document.getElementById(\"TF\").style.margin = \"20px\";\n    document.getElementById(\"TF\").style.padding = \"20px\";\n\n  }\n\n  addTFQ(){\n    this.QuestionSer.AddTFQ(this.TFQ , this.courseId).subscribe(\n      (data: any) => {\n        console.log(data)\n       \n      },\n      (err) => console.log(err)\n    );\n  }\n\n\n  toggle() {\n    this.isExpand = !this.isExpand;\n  }\n\n  AddNewQuestion() {\n    document.getElementById('MC').style.display = 'block';\n    document.getElementById('MC').style.backgroundColor = ' #f4f4f4';\n    document.getElementById('MC').style.margin = '20px';\n    document.getElementById('MC').style.padding = '20px';\n\n    // var iDiv = document.createElement('div');\n\n    document.getElementById('MC').classList.add('MCQuestions');\n\n    /*this.elem = document.querySelector('#MC')\n    this.elem.classList.add(\"MCQuestions\");*/\n\n    /*  this.elem.innerHTML = this.elem.innerHTML;\n\n    $(\"p:first\").addClass(\"intro\");*/\n\n    let newQuestion = document.getElementById('unique');\n\n    /* document.getElementById('questions').innerHTML =\n      document.getElementById('questions').innerHTML +\n      newQuestion.innerHTML;*/\n\n    /* document.getElementById('questions').appendChild( newQuestion); */\n\n    /*var node = document.createElement(\"div\");  \n\n   var textnode = document.createElement(newQuestion.innerHTML);   \n         // Create a text node\n  node.appendChild(textnode);                              // Append the text to <li>\n  /* document.getElementById(\"myList\").appendChild(node);   \n\n    newQuestion.id = \"11\";\n\n    document.getElementById('questions').appendChild( node);*/\n\n    //console.log(document.getElementById('MC').getElementsByTagName('input')[0].value)\n    //console.log(document.getElementById(\"11 : input\").);\n\n    //console.log(newQuestion.id)\n  }\n\n  showOption() {}\n\n  addnewoption() {\n    this.option++;\n    document.getElementById('option' + this.option).style.display = 'flex';\n  }\n  addChoiseQ() {\n    let i = 0;\n    while (this.mcq.Choices[i].choice != '') {\n      console.log(i);\n      i++;\n    }\n\n    console.log(this.mcq);\n\n    this.QuestionSer.createQuestion(this.mcq , this.courseId).subscribe(\n      (res) => {\n        console.log(res);\n        this.showSuccess();\n      },\n      (err) => console.log(err)\n    );\n\n    \n    // this.mcq.Choices[0]=this.ch1;\n    // this.mcq.Choices[1]=this.ch2;\n    // this.mcq.Choices[2]=this.ch3;\n    // this.mcq.Choices[3]=this.ch4;\n    // this.mcq.Choices[4]=this.ch5;\n    // this.mcq.Choices[5]=this.ch6;\n\n    //   this.courseSer.createCourse(this.course,this.courseImage).subscribe(\n    //     (data: any) => {\n    //       alert(data)\n    //       this._Router.navigate([\"/courses\"]);\n    //     },\n    //     (err) => console.log(err)\n    //   );\n  }\n\n  showSuccess() {\n    this.toastr.success('Question Added Succefully', 'Toastr fun!');\n  }\n\n  Hide(){this.IsSelected=true}\n  Show(){\n    this.IsSelected=false;\n    this.mcq.Choices=  [\n      { choice: '', IsTrue: false },\n      { choice: '', IsTrue: false },\n      { choice: '', IsTrue: false },\n      { choice: '', IsTrue: false },\n      { choice: '', IsTrue: false },\n      { choice: '', IsTrue: false },\n    ]\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-lg-2\">\n\n    </div>\n\n    <div class=\"col-lg-8\">\n\n        <div class=\"questions\">\n\n            <div>\n                <ul class=\"nav nav-tabs\" style=\"width:100%;border-bottom: none;\">\n                    <div class=\"row\" style=\"width:100%;margin-left: 0px;\">\n\n                        <div class=\"col-lg-6\" style=\"width:100%;padding:10px;text-align: center;\n                        height: 64px;color: #5f7d95;font-size: 22px;font-weight: 500;text-align: center;\n                        border-top: 3px solid #008272;\">\n\n                            <li class=\"active\"><a href=\"#\" style=\"font-size: 22px;\">Questions</a></li>\n                        </div>\n                        <div class=\"col-lg-6\"\n                            style=\"width:100%;padding:10px;text-align: center;box-shadow: inset 0 0 30px rgba(34,34,34,0.25);\n                        background-color: rgba(248,250,251,0.5);height: 64px;color: #5f7d95;font-size: 22px;font-weight: 500;text-align: center;\">\n                            <li><a href=\"#\" style=\"font-size: 22px;\">Responses</a></li>\n                        </div>\n                    </div>\n                </ul>\n\n                <!-- Multi Choice Question -->\n                <div id=\"questions\" >\n                    <div class=\"MCQuestions \"\n                        style=\"background-color: #f4f4f4;margin-top: 20px;padding-left: 30px;padding: 20px;margin: 15px;display: none;\"\n                        id=\"MC\">\n                        <div class=\"border \"> \n                            <form style=\"padding: 20px;\" [formGroup]=\"ChoiseQues\" (ngSubmit)=\"addChoiseQ()\">\n\n                                <div class=\"form-group\">\n                                    <div class=\"row \" >\n                                        <label for=\"\" style=\"margin-left: 20px;\"> 1 . </label>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Question.QuestionContent\" type=\"text\"\n                                            placeholder=\"Input your question title here\" class=\"form-control w-75\"\n                                            formControlName=\"QuestionContent\" style=\"max-width: 90%;\">\n\n                                            <input type=\"button\" *ngIf=\"IsSelected\" style=\"margin-left: 20px;\" class=\"btn btn-outline-info\" (click)=\"Show()\" value=\"rest\">\n\n                                    </div>\n\n                                    <div class=\"row\" id=\"option1\"\n                                        style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;padding-top: 25px;\">\n                                        <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Choices[0].choice\" type=\"text\" class=\"form-control\" formControlName=\"ch1\"\n                                            style=\"max-width: 60%;\" placeholder=\"option 1\">\n\n                                            <select  (change)=\"Hide()\" *ngIf=\"!IsSelected\" style=\"width: 15%; margin-left: 20px;\" class=\"form-control\" [(ngModel)]=\"mcq.Choices[0].IsTrue\"  formControlName=\"ch11\"> \n                                                <option value=\"true\">true </option>\n                                                <option value=\"false\">false</option>\n                                             </select> \n                                    </div>\n\n                                    <div class=\"row\" id=\"option2\"\n                                        style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;\">\n                                        <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Choices[1].choice\" type=\"text\" class=\"form-control\" formControlName=\"ch2\"\n                                            style=\"max-width: 60%;\" placeholder=\"option 2\">\n\n                                            <select  (change)=\"Hide()\" *ngIf=\"!IsSelected\" class=\"form-control\" [(ngModel)]=\"mcq.Choices[1].IsTrue\" style=\"width: 15%; margin-left: 20px;\" formControlName=\"ch12\"> \n                                                <option value=\"true\">true </option>\n                                                <option value=\"false\">false</option>\n                                             </select> \n                                    </div>\n\n                                    <div class=\"row\" id=\"option3\"\n                                        style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;display: none;\">\n                                        <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Choices[2].choice\" type=\"text\" class=\"form-control\" formControlName=\"ch3\"\n                                            style=\"max-width: 60%;\" placeholder=\"option 2\">\n\n                                            <select (change)=\"Hide()\" *ngIf=\"!IsSelected\" class=\"form-control\" [(ngModel)]=\"mcq.Choices[2].IsTrue\" style=\"width: 15%; margin-left: 20px;\" formControlName=\"ch13\"> \n                                                <option value=\"true\">true </option>\n                                                <option value=\"false\">false</option>\n                                             </select> \n                                    </div>\n\n                                    <!---->\n                                    <div class=\"row \" id=\"option4\"\n                                        style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;display: none;\">\n                                        <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Choices[3].choice\" type=\"text\" class=\"form-control\" formControlName=\"ch4\"\n                                            style=\"max-width: 60%;\" placeholder=\"option 2\">\n\n                                            <select (change)=\"Hide()\" *ngIf=\"!IsSelected\" class=\"form-control\" [(ngModel)]=\"mcq.Choices[3].IsTrue\" style=\"width: 15%; margin-left: 20px;\" formControlName=\"ch14\"> \n                                                <option value=\"true\">true </option>\n                                                <option value=\"false\">false</option>\n                                             </select> \n                                    </div>\n\n                                    <div class=\"row\" id=\"option5\"\n                                        style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;display: none;\">\n                                        <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Choices[4].choice\" type=\"text\" class=\"form-control\" formControlName=\"ch5\"\n                                            style=\"max-width: 60%;\" placeholder=\"option 2\">\n\n                                            <select (change)=\"Hide()\" *ngIf=\"!IsSelected\" class=\"form-control\" [(ngModel)]=\"mcq.Choices[4].IsTrue\" style=\"width: 15%; margin-left: 20px;\" formControlName=\"ch15\"> \n                                                <option value=\"true\">true </option>\n                                                <option value=\"false\">false</option>\n                                             </select> \n                                    </div>\n                                    <div class=\"row\" id=\"option6\"\n                                        style=\"padding-bottom: 25px;padding-left: 50px;align-items: center;display: none;\">\n                                        <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp;\n                                        <input [(ngModel)]=\"mcq.Choices[5].choice\" type=\"text\" class=\"form-control\" formControlName=\"ch6\"\n                                            style=\"max-width: 60%;\" placeholder=\"option 2\">\n\n                                            <select (change)=\"Hide()\" *ngIf=\"!IsSelected\" class=\"form-control\" [(ngModel)]=\"mcq.Choices[5].IsTrue\" style=\"width: 15%; margin-left: 20px;\" formControlName=\"ch16\"> \n                                                <option value=\"true\">true </option>\n                                                <option value=\"false\">false</option>\n                                             </select> \n                                    </div>\n\n                                    <div class=\"d-flex justify-content-around\">\n                                        <button type=\"button\" class=\"btn btn-outline-info\" (click)=\"addnewoption()\">+\n                                            Add Option</button>\n                                            <button class=\"btn btn-outline-info\" type=\"submit\">Add MCQ</button>\n\n                                    </div>\n\n                                    <!-- <hr>\n                                    <div class=\"row\">\n                                        <span style=\"margin-left: 20px;\"> Points: </span> &nbsp;&nbsp; <input\n                                            type=\"text\" class=\"form-control\" style=\"max-width: 35px;\">\n\n                                    </div> -->\n\n                                  \n\n                                </div>\n                            </form>\n                        </div>\n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                        <div class=\" border \" \n                        style=\"background-color: #f4f4f4;margin-top: 20px;padding-left: 30px;padding: 20px;margin: 15px;display: none;\"\n                        id=\"TF\">\n                        <div>\n             <form [formGroup]=\"TFQues\" (ngSubmit)=\"addTFQ()\">\n    \n                            <div class=\"form-group\">\n                                <div class=\"row\">\n                                    <label for=\"\" style=\"margin-left: 20px;\"> 6 . </label>&nbsp;&nbsp;&nbsp;\n                                    <input  [(ngModel)]=\"TFQ.Question.QuestionContent\" type=\"text\" placeholder=\"Input your question title here\" class=\"form-control\"\n                                    formControlName=\"TFQuestionContent\"    style=\"max-width: 70%;\">\n                                    \n                                </div>\n    \n                        \n    \n                                 <div class=\"row\"   style=\"margin-top:25px;padding-bottom: 25px;padding-left: 50px;align-items: center\">\n                                    <i class=\"far fa-circle\" style=\"color: lightgray;\"></i>&nbsp;&nbsp;&nbsp; \n                                    <select class=\"form-control\" [(ngModel)]=\"TFQ.CorrectAnswer\" style=\"max-width: 30%;\" formControlName=\"CorrectAnswer\"> \n                                        <option value=\"true\">true </option>\n                                        <option value=\"false\">false</option>\n                                     </select> \n\n                                     <button  style=\"margin-left: 50px;\" class=\"btn btn-outline-info\" type=\"submit\">Create</button>\n\n                                </div>\n                                \n                            </div>\n             </form>\n                        </div>\n                    </div></div>\n\n\n\n\n                </div>\n\n\n\n                <div style=\"background-color: #008272;margin-top: 20px;margin: 20px;\">\n\n                    <span style=\"font-size: 28px;width: 30px;\n                display: inline-block;text-align: center;color: white;cursor: pointer;\" (click)=\"toggle()\">+</span>\n\n                    <span *ngIf=\"!isExpand\" style=\"font-size: 20px;\n                display: inline-block;text-align: center;color: white;cursor: pointer;\" (click)=\"toggle()\">Add\n                        New</span>\n\n                    <div class=\"questionTypes\" *ngIf=\"isExpand\">\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"AddNewQuestion()\"><i\n                                class=\"far fa-dot-circle\"></i>\n                            <span class=\"txt\">\n                                Choice\n                            </span>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-light\" (click)=\"AddTFQuestion()\"><i class=\"fas fa-check-circle\"></i>\n                            <span class=\"txt\">\n                                True & False\n                            </span>\n                        </button>\n\n\n                        <button type=\"button\" class=\"btn btn-light\"><i class=\"fas fa-file-alt\"></i>\n                            <span class=\"txt\">\n                                Text\n                            </span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"col-lg-2\">\n\n    </div>\n\n\n</div>","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Iuser } from 'src/Interfaces/iuser';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit , AfterViewInit {\r\n  constructor(private router:Router) {\r\n \r\n  }\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    \r\n  }\r\n\r\n\r\n  \r\n  showCourses(courseCode){\r\n\r\n    let s: Iuser=JSON.parse(localStorage.getItem('user'));\r\n    console.log('Show Courses')\r\n    console.log(s.Level) \r\n    console.log(courseCode)\r\n    this.router.navigate([`/allcourse/${courseCode}/${s.Level}`]);\r\n\r\n\r\n\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid\" class=\"border border-danger\">\r\n\r\n  <div class=\"\" style=\" background-color:#882323;\">\r\n    <div class=\"row \">\r\n      <h2 class=\"mx-auto text-white\" style=\"margin-top: 20px;\">\r\n        ساهم بشرح دروس تعليمية بأسلوبك وساعد الملايين من الطلاب\r\n      </h2>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <!-- Courses -->\r\n      <div class=\"col-lg-10  mx-auto\" style=\"margin-bottom: 50px;\">\r\n        <div class=\"row\">\r\n          <div class=\"col-lg-4\">\r\n            <div class=\"card \"\r\n              style=\"background-color:#882323;color: white; border-color: gray; height: 170px;border-radius: 10px;cursor: pointer;\"\r\n              (click)=\"showCourses('arabic')\">\r\n              <img src=\"assets/320192813228911887628.jpg\" class=\"card-img-top\" style=\"height:120px;border-radius: 0px;\"\r\n                alt=\"...\">\r\n              <div class=\"card-body\" style=\"text-align: center;\">\r\n                <h5 class=\"card-title\">Arabic Language</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-4\">\r\n            <div class=\"card \"\r\n              style=\"background-color:#882323;color: white; border-color: gray; height: 170px;border-radius: 10px;cursor: pointer;\"\r\n              (click)=\"showCourses('eng')\">\r\n              <img src=\"assets/its_time_to_learn_english.jpg\" class=\"card-img-top\"\r\n                style=\"height:120px;border-radius: 0px;\" alt=\"...\">\r\n              <div class=\"card-body\" style=\"text-align: center;\">\r\n                <h5 class=\"card-title\">English Language</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-lg-4\">\r\n            <div class=\"card \"\r\n              style=\"background-color:#882323;color: white; border-color: gray; height: 170px;border-radius: 10px;cursor: pointer;\"\r\n              (click)=\"showCourses('math')\">\r\n              <img src=\"assets/maths.jpg\" class=\"card-img-top\" style=\"height:120px;border-radius: 0px;\" alt=\"...\">\r\n              <div class=\"card-body\" style=\"text-align: center;\">\r\n                <h5 class=\"card-title\">Mathmatics</h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n\r\n\r\n  <div class=\"\" style=\"\">\r\n    <div class=\"row border\">\r\n      <h2 class=\"mx-auto border\" >\r\n        اسال واجب\r\n        <i class=\"far fa-comment-alt\" style=\"font-size: 40px;\">\r\n          <i class=\"fas fa-question\" style=\"font-size: 20px;\"></i>\r\n        </i>\r\n      </h2>\r\n\r\n\r\n    </div>\r\n    <div class=\"row border\">\r\n      <h4 class=\"mx-auto text-muted border \" style=\"width: 82%;\">\r\n        مساحة خاصة لطرح الأسئلة المتعلقة بالمناهج الدراسية وتبادل الخبرات بين الطلاب والمعلمين وسائل الإجابة عليها.\r\n      </h4>\r\n      \r\n    </div>\r\n\r\n    <div class=\"row border\" style=\"font-size: xx-large;\">\r\n      <div class=\"col-4 mx-auto\">\r\n      <button class=\"btn btn-info\">اضافه الاسئله  </button> <button class=\"btn btn-link\" style=\"text-decoration: none;\">بإمكانك تصفح الأسئلة أو </button> \r\n    </div>\r\n    </div>\r\n\r\n    <div class=\"row d-flex justify-content-around\" style=\"margin-top: 50px;\">\r\n      <div class=\"col-3 rounded\" style=\"height: 130px;background-color: #f7f7f7;border:solid 1px  #e3e3e3;  box-shadow: 7px 7px 8px #bdb6b6; transform: rotate(-8deg);\">\r\n      <p style=\"float: right;\">  السوال الاول</p>\r\n      <i style=\"float: right;\" class=\"far fa-user-circle text-info\"></i>\r\n      </div>\r\n      <div class=\"col-3 rounded\" style=\"height: 130px;background-color: #f7f7f7;border:solid 1px  #e3e3e3;  box-shadow: 7px 7px 8px #bdb6b6; transform: rotate(-8deg);\">السوال الاول </div>\r\n      <div class=\"col-3 rounded\" style=\"height: 130px;background-color: #f7f7f7;border:solid 1px  #e3e3e3;  box-shadow: 7px 7px 8px #bdb6b6; transform: rotate(-8deg);\">السوال الاول </div>\r\n\r\n\r\n    </div>\r\n\r\n    <div class=\"row d-flex justify-content-around\" style=\"margin-top: 200px;\">\r\n      <div class=\"col-3\" style=\"height: 100px;background-color: gray;\">1</div>\r\n      <div class=\"col-3\" style=\"height: 100px;background-color: gray;\">1</div>\r\n      <div class=\"col-3\" style=\"height: 100px;background-color: gray;\">1</div>\r\n\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Iuser } from 'src/Interfaces/iuser';\r\nimport { InnerSubscriber } from 'rxjs/internal/InnerSubscriber';\r\nimport { IAccount } from 'src/Interfaces/iaccount';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit , OnChanges{\r\n  validatingForm: FormGroup;\r\n\r\n  isLoginError: boolean = false;\r\n\r\n  isLogin : boolean = false;\r\n\r\n  currenUser : IAccount;\r\n  \r\n\r\n  constructor(private authSer: AuthuserService, private router: Router) {}\r\n\r\n  ngOnChanges() {\r\n\r\n    this.isLogin = this.authSer.isLogin; \r\n\r\n    \r\n\r\n    this.currenUser = this.authSer.userInfo;\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    console.log('Start IsLogin : ' + localStorage.getItem('isLogin'))\r\n\r\n    this.currenUser = this.authSer.userInfo;\r\n\r\n    this.currenUser = JSON.parse(localStorage.getItem('user'));\r\n\r\n    console.log(`in ngOnChanges ${this.currenUser.Image}` )\r\n\r\n\r\n    if(localStorage.getItem('isLogin') != undefined)\r\n        this.isLogin =  true;\r\n      else\r\n      this.isLogin =  false;\r\n\r\n\r\n      console.log('isLogin' + this.isLogin)\r\n\r\n\r\n\r\n      //localStorage.removeItem['isLogin'];\r\n\r\n      //console.log('isLogin' + localStorage.removeItem['isLogin'])\r\n\r\n\r\n      //this.image = localStorage.getItem('userImage');\r\n\r\n\r\n\r\n  }\r\n\r\n  checkAccount(content, userName, password) {\r\n\r\n    this.authSer.login(userName, password).subscribe(\r\n      (data: any) => {\r\n        localStorage.setItem('userToken', data.access_token);\r\n\r\n        document.getElementById('close').click();\r\n\r\n        this.isLoginError = true;\r\n\r\n        localStorage.setItem('isLogin' , 'true');\r\n\r\n        console.log('Login :: ' + localStorage.getItem('isLogin'))\r\n\r\n        this.isLogin = true;  \r\n\r\n\r\n        this.authSer.GetUserInfo(userName, password).subscribe(\r\n          (data) => {\r\n            this.authSer.userInfo = data as Iuser;\r\n\r\n            this.currenUser = data as Iuser;\r\n            console.log('User Info ' + this.authSer.userInfo)\r\n            localStorage.setItem('userId' , data.Id);\r\n            localStorage.setItem('userImage' , data.Image);\r\n            console.log('User ID : ' +  localStorage.getItem('userId'))\r\n            localStorage.setItem('userType' , data.Type);\r\n            //this.image = data.Image;         \r\n\r\n           \r\n\r\n            localStorage.setItem('user' , JSON.stringify(data));\r\n            let s: Iuser=JSON.parse(localStorage.getItem('user'));\r\n            console.log(s);\r\n\r\n            if(s.Type == \"Student\")\r\n              this.router.navigate(['/studentcoures']);\r\n              else\r\n              this.router.navigate(['/courses']);\r\n          },\r\n          \r\n          (err) => {\r\n            alert(err);\r\n          }\r\n        );\r\n\r\n        \r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.isLoginError = true;\r\n      }\r\n    );\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.removeItem('userToken');\r\n    localStorage.removeItem('userImage');\r\n    localStorage.removeItem('isLogin')\r\n\r\n    this.isLogin = false;\r\n    this.router.navigate(['/home']);\r\n    \r\n    //this.isAdmin = false;\r\n\r\n  }\r\n}\r\n","<!-- Start NavBar -->\r\n\r\n<nav class=\"navbar navbar-expand-lg menu \" style=\"padding: 0px;\">\r\n    <div class=\"container\">\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span style=\"color:white !important\" class=\"navbar-toggler-icon\">\r\n                <i class=\"fas fa-bars\" style=\"color:#fff; font-size:28px;\"></i>\r\n            </span>\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse    w-75 \" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto \">\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" href=\"#\" style=\"padding-right: 18px;\">Alemny <span\r\n                            class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" href=\"#\" style=\"padding-right: 18px;\" [routerLink]=\"['/home']\">Home</a>\r\n                </li>\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" href=\"#\" style=\"padding-right: 18px;\" id=\"navbarDropdown\"\r\n                        role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Levels\r\n                    </a>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 1</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 2</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 3</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 4</a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                        <a class=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                    </div>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" href=\"#\">Collection <span class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" href=\"#\" style=\"padding-right: 18px;color: #cf8d0f;\">\r\n                        <i class=\"fas fa-crown\"></i>\r\n                        Premium\r\n                        <span class=\"sr-only\">(current)\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n                <li class=\"nav-item active\">\r\n                    <a class=\"nav-link\" style=\"padding-right: 18px;\" href=\"#\">More tools <span\r\n                            class=\"sr-only\">(current)</span></a>\r\n                </li>\r\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n        <div *ngIf=\"!isLogin\" class=\"login my-2 my-lg-0   \">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item\"><a class=\"nav-link\" href=\"\" data-toggle=\"modal\" data-target=\"#loginModal\">Hello\r\n                        sign in </a></li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div *ngIf=\"isLogin\" class=\"login my-2 my-lg-0   \">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n                <li class=\"nav-item dropdown\">\r\n                    <a class=\"nav-link dropdown-toggle\" href=\"\" id=\"login\" role=\"button\" data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        <img [src]=\"currenUser.Image\" class=\"rounded-circle image-thumbnail\" style=\"width: 30px; height: 30px;\">\r\n                    </a>\r\n\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"login\">\r\n                        <div class=\"d-flex\" style=\"padding-left:20px;\">\r\n                            <img [src]=\"currenUser.Image\" class=\"rounded-circle image-thumbnail\"\r\n                                style=\"width: 56px; height: 56px;\">\r\n\r\n                            <h6\r\n                                style=\"padding-left: 5px;    font-size: .8rem; margin-top: 10px;\r\n                                cursor: pointer;font-family: inherit;font-weight: 600;justify-content: center;min-width: 6.4rem;max-width: 480px; overflow: hidden;color: #006097;\">\r\n                                {{currenUser.UserName}}\r\n                            </h6>\r\n                        </div>\r\n                        <div style=\"text-align: center;cursor: pointer;\" [routerLink]=\"['/profile']\" routerLinkActive=\"router-link-active\" >View Profile</div>\r\n                        <a class=\"dropdown-item\" [routerLink]=\"['/courses']\" >My Courses</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 2</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 3</a>\r\n                        <a class=\"dropdown-item\" href=\"#\">Level 4</a>\r\n                        <div class=\"dropdown-divider\"></div>\r\n                        <a class=\"dropdown-item\" href=\"#\" (click)=\"Logout()\">Sign out</a>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n\r\n\r\n<div #loginForm class=\"modal\" id=\"loginModal\" style=\"top:15%\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header\" style=\"padding:0px\">\r\n                <ul class=\"nav nav-tabs\" style=\"width:100%;border-bottom: none;\">\r\n                    <div class=\"row\" style=\"width:100%;margin-left: 0px;\">\r\n                        <div class=\"col-lg-6\"\r\n                            style=\"width:100%;padding:10px;text-align: center;\r\n                        height: 64px;color: #5f7d95;font-size: 22px;font-weight: 500;text-align: center;line-height: 64px;\">\r\n                            <li class=\"active\"><a href=\"#\" style=\"font-size: 22px;\">Sign up</a></li>\r\n                        </div>\r\n                        <div class=\"col-lg-6\"\r\n                            style=\"width:100%;padding:10px;text-align: center;box-shadow: inset 0 0 30px rgba(34,34,34,0.25);\r\n                        background-color: rgba(248,250,251,0.5);height: 64px;color: #5f7d95;font-size: 22px;font-weight: 500;text-align: center;line-height: 64px;\">\r\n                            <li><a href=\"#\" style=\"font-size: 22px;\">Sign in</a></li>\r\n                        </div>\r\n                    </div>\r\n                </ul>\r\n                <!--<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>-->\r\n            </div>\r\n\r\n            <!-- Modal body -->\r\n            <div class=\"modal-body\">\r\n\r\n                <div style=\"text-align: center;\">\r\n                    <span style=\"font-size: 18px;\">with your social network</span>\r\n                    <div>\r\n\r\n                        <button type=\"button\" class=\"btn\" href=\"\"\r\n                            style=\"font-size:20px;margin-right: 5px;;background: #0077ff;\">\r\n                            <i class=\"fab fa-facebook-square\" style=\"padding:5px;padding-right: 25px;padding-left: 25px;color: white;\r\n                                        border-radius: 4px;\"></i>\r\n                        </button>\r\n\r\n                        <button type=\"button\" class=\"btn\" href=\"\"\r\n                            style=\"font-size:20px;margin-right: 5px;;background: #0d95bf;\">\r\n                            <i class=\"fab fa-twitter-square\" style=\"padding: 5px;padding-right: 25px;padding-left: 25px;background: #0d95bf;color: white;\r\n                        border-radius: 4px;\"></i>\r\n                        </button>\r\n\r\n                        <button type=\"button\" class=\"btn\" href=\"\"\r\n                            style=\"font-size:20px;margin-right: 5px;;background: #e64847\">\r\n                            <i class=\"fab fa-google-plus-square\" style=\"padding: 5px;padding-right: 25px;padding-left: 25px;background: #e64847;color: white;\r\n                                        border-radius: 4px;\"></i>\r\n                        </button>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n                <div class=\"row\" style=\"text-align: center;\">\r\n                    <div class=\"col-lg-6\">\r\n                        <hr>\r\n                    </div>\r\n                    <span style=\"margin-top: 5px;color: #5f7d95;\">or</span>\r\n                    <div class=\"col-lg-5\">\r\n                        <hr>\r\n                    </div>\r\n                </div>\r\n                <!--action=\"/Account/Login\"-->\r\n                <form method=\"post\" style=\"width: 100%;\">\r\n\r\n                    <div *ngIf=\"isLoginError\" id=\"validateForm\" style=\"padding-bottom:10px\">\r\n                        <span class=\"text-danger\">\r\n                            User name and password are not match\r\n                        </span>\r\n                    </div>\r\n                    <div class=\"form-horizontal\">\r\n\r\n                        <div class=\"input-group is-invalid\" style=\"margin-bottom: 10px;padding-right: 18px;\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"validatedInputGroupPrepend\">\r\n                                    <i class=\"far fa-user\"></i></span>\r\n                            </div>\r\n                            <input type=\"text\" class=\"form-control \" placeholder=\"Username or Email\"\r\n                                aria-describedby=\"validatedInputGroupPrepend\" #uname required>\r\n                        </div>\r\n\r\n\r\n\r\n                        <div class=\"input-group is-invalid\" style=\"margin-bottom: 10px;\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"validatedInputGroupPrepend\"><i\r\n                                        class=\"fas fa-lock\" style=\"color:#5f7d95\"></i></span>\r\n                            </div>\r\n                            <input type=\"password\" class=\"form-control\"  style=\"border-radius: 3px;\" placeholder=\"Password\"\r\n                                aria-describedby=\"validatedInputGroupPrepend\" #psd required>  \r\n                                \r\n                                <span style=\"position: relative;right: 30px;top: 10px;font-size:16px;color: #5f7d95;\"><i class=\"fas fa-eye\"></i></span>\r\n                        </div>\r\n\r\n                        \r\n\r\n\r\n                        <div class=\"d-flex\" style=\"justify-content: space-between;margin-bottom: 10px;padding-right: 18px;\">\r\n                            <div>\r\n                                <input type=\"checkbox\" class=\"checkbox-inline\" name=\"rememberMe\" />\r\n                                <label for=\"rememberMe\" style=\"margin-left: 5px;\">Remember Me</label>\r\n                            </div>\r\n\r\n                            <a href=\"\"  class=\"psd\">Forgot your password?</a>\r\n\r\n                        </div>                        \r\n                        \r\n                    </div>\r\n\r\n                    <!-- Modal footer -->\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" id=\"close\"\r\n                            #close><strong>&times;</strong> Close</button>\r\n                        <a [routerLink]=\"['/signup']\" onclick=\"getElementById('close').click()\"\r\n                            routerLinkActive=\"router-link-active\" type=\"button\" class=\"btn btn-success\" role=\"button\">\r\n                            <i class=\"fas fa-user\"></i> Register</a>\r\n                        <button type=\"button\" class=\"btn btn-primary\"\r\n                            (click)=\"checkAccount(loginForm ,uname.value , psd.value)\">\r\n                            <i class=\"fas fa-sign-in-alt\"></i>\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--\r\n<ng-template #mymodal let-modal>\r\n\r\n    <div class=\"modal-header\">\r\n  \r\n      <h4 class=\"modal-title\" id=\"modal-basic-title\">Bootstrap Modal</h4>\r\n  \r\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n  \r\n        <span aria-hidden=\"true\">×</span>\r\n  \r\n      </button>\r\n  \r\n    </div>\r\n  \r\n    <div class=\"modal-body\">\r\n  \r\n      This is example from ItSolutionStuff.com\r\n  \r\n    </div>\r\n  \r\n    <div class=\"modal-footer\">\r\n  \r\n      <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Ok</button>\r\n  \r\n    </div>\r\n  \r\n  </ng-template>\r\n\r\n  -->","import { Component, OnInit } from '@angular/core';\r\nimport { ICourse } from 'src/Interfaces/icourse';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { CourseService } from 'src/Services/course.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-course-results',\r\n  templateUrl: './search-course-results.component.html',\r\n  styleUrls: ['./search-course-results.component.css']\r\n})\r\nexport class SearchCourseResultsComponent implements OnInit {\r\n  courses: ICourse[];\r\n  StgID:number ;\r\n  Sem:number ;\r\n  Subject:string ;\r\n  constructor(private courseSer : CourseService,private activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.StgID = params['StgID'];\r\n      this.Sem = params['Sem'];\r\n      this.Subject = params['Subject'];\r\n    });\r\n    this.courseSer.searchCourse(this.StgID,this.Sem,this.Subject).subscribe(\r\n      (data: any) => {\r\n        console.log(data);\r\n        this.courses = data;\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n\r\n    \r\n  \r\n}\r\n","<div class=\"card\" style=\"width: 18rem;\" *ngFor=\"let course of courses ;let i=index\"\r\n>\r\n    <img class=\"card-img-top\" src=\"https://www.alkatat.com/home/wp-content/uploads/2019/07/FB_IMG_1489593337135.jpg\" alt=\"Arabic\">\r\n    <div class=\"card-body\">\r\n      <h5 class=\"card-title\">{{course.Name}}</h5>\r\n      <p class=\"card-text\">{{course.Description}}Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n      <a href=\"#\" class=\"btn btn-primary\">View Course</a>\r\n    </div>\r\n  </div>\r\n  ","import { Component, OnInit } from '@angular/core';\r\nimport { IAccount } from 'src/Interfaces/iaccount';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Iuser } from 'src/Interfaces/iuser';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\ndisplay:boolean;\r\n\r\naccount: Iuser;\r\nLoginForm: FormGroup;\r\nInstructorImage:File;\r\n  constructor(\r\n    private user: AuthuserService,\r\n    private route: Router,\r\n   private FB: FormBuilder\r\n  ) { \r\n    this.display=false;\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void\r\n   {\r\n\r\n    this.account=JSON.parse(localStorage.getItem('user'));\r\nconsole.log(this.account);\r\n\r\n    this.LoginForm = this.FB.group({\r\n      Type:['', [Validators.required]],\r\n      Name: ['', [Validators.required, Validators.minLength(3)]],\r\n      UserName: ['', [Validators.required, Validators.minLength(3)]],\r\n      Image:['', [Validators.required]],\r\n      Level:['', [Validators.required]],\r\n      Email: ['', [Validators.required, Validators.email]],\r\n      // Password: ['', [Validators.required, Validators.minLength(6)]],\r\n      // ConfirmPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      Address: ['', [Validators.required, Validators.minLength(3)]],\r\n      PhoneNumber: ['', [Validators.required, Validators.minLength(11), Validators.maxLength(11)]],\r\n      Gender: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  \r\n\r\n  Toggle(){\r\n    //  console.log(\"HI\")\r\n    this.display=!this.display;\r\n   }\r\n\r\n\r\n   readURL(event): void \r\n   {\r\n    \r\n     \r\n     if (event.target.files && event.target.files[0])\r\n      {\r\n       this.InstructorImage= event.target.files[0];\r\n     }\r\n   \r\n   }\r\n\r\n  edit() {\r\n    this.user.editProfile(this.account,this.InstructorImage).subscribe(\r\n      (data: any) => {\r\n        localStorage.setItem('user',JSON.stringify(data))\r\n        this.account=JSON.parse(localStorage.getItem('user'));\r\n\r\n        console.log(data);\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\r\n    <div class=\" row  \" style=\"border-radius:10px ;\">\r\n\r\n        <div class=\"col-5\">\r\n            <div class=\"row \" style=\"height:100px;\r\n        background-image:url(assets/profile_bac.png);\r\n        background-position: center; \r\n        background-repeat: no-repeat; \r\n        background-size: cover;\r\n       \">\r\n            </div>\r\n\r\n            <div class=\" row border \" style=\"border-radius:10px ;\">\r\n                <div class=\"col-5\">\r\n\r\n                    <h4 style=\"margin-top: 50px;color: #0075b8;\">{{account.Name}}\r\n\r\n                    </h4>\r\n\r\n                    <h5 style=\"color: #0075b8;\">{{account.Type}}</h5>\r\n\r\n\r\n                    <!-- <i class=\"fas fa-map-marker-alt text-info\" style=\"font-size: large;\"></i>\r\n               <span style=\"color: #0075b8;\" >   {{account.Address}}</span> -->\r\n\r\n                </div>\r\n                <div class=\"col-7\">\r\n                    <div class=\"d-flex justify-content-between\" style=\"margin-top: 10px;\">\r\n\r\n\r\n                        <button class=\"btn btn-outline-info \">Add Section</button>\r\n                        <button class=\"btn btn-outline-info\" (click)=\"Toggle()\"><i\r\n                                class=\"fas fa-user-edit\"></i></button>\r\n                    </div>\r\n                    <div class=\" justify-content-around\" style=\"margin-top: 10px;\">\r\n                        <i class=\"fas fa-envelope gold\" style=\"font-size: large;\"></i>\r\n                        <span style=\"color: #0075b8;\"> {{account.Email}}</span>\r\n                    </div>\r\n\r\n                    <div class=\" justify-content-around\" style=\"margin-top: 10px;\">\r\n                        <i class=\"fas fa-mobile-alt gold\" style=\"font-size: x-large;\"></i>\r\n                        <span style=\"color: #0075b8;\"> {{account.PhoneNumber}}</span>\r\n                    </div>\r\n\r\n                    <div class=\" justify-content-around\" style=\"margin-top: 10px;\">\r\n                        <i class=\"fas fa-map-marker-alt gold\" style=\"font-size: large;\"></i>\r\n                        <span style=\"color: #0075b8;\"> {{account.Address}}</span>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n        <img class=\"img-fluid\" [src]=\"account.Image\" style=\"width:110px ;height:110px;\r\n     border-radius:50%; \r\n      position: absolute;\r\n     top: 70px;\r\n     left: 80px; \r\n      \">\r\n\r\n        <div class=\"col-7 \">\r\n\r\n            <form *ngIf=\"display\" [formGroup]=\"LoginForm\" (ngSubmit)=\"edit()\" class=\"mx-auto\" style=\"width:100%;\">\r\n                <div class=\"\"\r\n                    style=\"padding: 20px ; border-radius: 10px;background-color: white;border: 1px solid lightgray\">\r\n                    <div class=\"form-horizontal\">\r\n                        <div class=\"mx-auto d-flex justify-content-center\" style=\"color:#00b8df\">\r\n                            <h3 class=\" \" style=\"margin-left: 10px;\">Alemny </h3>\r\n                        </div>\r\n\r\n                        <!-- <hr style=\"background-color: #f1c75f;\"/> -->\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Instructor or Student</label>\r\n\r\n                            <select [(ngModel)]=\"account.Type\" class=\"form-control\" formControlName=\"Type\">\r\n                                <option value=\"Instructor\" selected>Instructor</option>\r\n                                <option value=\"Student\">Student</option>\r\n                            </select>\r\n\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Name</label>\r\n                            <input [(ngModel)]=\"account.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\r\n\r\n                            <div [hidden]=\"LoginForm.controls['Name'].valid || LoginForm.controls['Name'].untouched\"\r\n                                class=\"alert alert-warning\">\r\n                                Your Name is required and must be more Than 3 Chars\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">UserName</label>\r\n                            <input [(ngModel)]=\"account.UserName\" type=\"text\" class=\"form-control\"\r\n                                formControlName=\"UserName\">\r\n\r\n                            <div [hidden]=\"LoginForm.controls['UserName'].valid || LoginForm.controls['UserName'].untouched\"\r\n                                class=\"alert alert-warning\">\r\n                                UserName is required and must be more Than 3 Chars\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Email</label>\r\n                            <input [(ngModel)]=\"account.Email\" type=\"email\" class=\"form-control\"\r\n                                formControlName=\"Email\">\r\n\r\n                            <div [hidden]=\"LoginForm.controls['Email'].valid || LoginForm.controls['Email'].untouched\"\r\n                                class=\"alert alert-warning\">\r\n                                Your email must be in Format 'user@user.com'\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- <div class=\"form-group\">\r\n                        <label for=\"\">Password</label>\r\n                        <input [(ngModel)]=\"account.Password\" type=\"password\" class=\"form-control\" formControlName=\"Password\">\r\n        \r\n                        <div [hidden]=\"LoginForm.controls['Password'].valid || LoginForm.controls['Password'].untouched\"\r\n                            class=\"alert alert-warning\">\r\n                            Password is required and must be more Than 6 Chars\r\n                        </div>\r\n                    </div>\r\n        \r\n        \r\n        \r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">ConfirmPassword</label>\r\n                        <input [(ngModel)]=\"account.ConfirmPassword\" type=\"password\" class=\"form-control\"\r\n                            formControlName=\"ConfirmPassword\">\r\n        \r\n                        <div [hidden]=\"LoginForm.controls['ConfirmPassword'].valid || LoginForm.controls['ConfirmPassword'].untouched\"\r\n                            class=\"alert alert-warning\">\r\n                            Not match The Password\r\n                        </div>\r\n                    </div> -->\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Gender</label>\r\n\r\n                            <select [(ngModel)]=\"account.Gender\" class=\"form-control\" formControlName=\"Gender\">\r\n                                <option value=\"Male\" selected>Male</option>\r\n                                <option value=\"Female\">Female</option>\r\n                            </select>\r\n\r\n\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Phone Number</label>\r\n                            <input [(ngModel)]=\"account.PhoneNumber\" type=\"text\" class=\"form-control\"\r\n                                formControlName=\"PhoneNumber\">\r\n\r\n                            <div [hidden]=\"LoginForm.controls['PhoneNumber'].valid || LoginForm.controls['PhoneNumber'].untouched\"\r\n                                class=\"alert alert-warning\">\r\n                                phone Number is required and must be 11 digits\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Address</label>\r\n                            <input [(ngModel)]=\"account.Address\" type=\"text\" class=\"form-control\"\r\n                                formControlName=\"Address\">\r\n\r\n                            <div [hidden]=\"LoginForm.controls['Address'].valid || LoginForm.controls['Address'].untouched\"\r\n                                class=\"alert alert-warning\">\r\n                                Address is required\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div *ngIf=\"account.Type=='Student'\" class=\"form-group\">\r\n\r\n                            <label for=\"\">Student Level</label>\r\n\r\n                            <select [(ngModel)]=\"account.Level\" class=\"form-control\" formControlName=\"Level\">\r\n                                <option value=\"First\" selected></option>\r\n                                <option value=\"Second\">Second</option>\r\n                                <option value=\"Third\">Third</option>\r\n                                <option value=\"Forth\">Forth</option>\r\n                            </select>\r\n\r\n                        </div>\r\n\r\n\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">Image</label>\r\n                            <input [(ngModel)]=\"account.Image\" (change)=\"readURL($event);\" type=\"file\"\r\n                                class=\"form-control\" formControlName=\"Image\">\r\n                        </div>\r\n\r\n\r\n\r\n                        <button class=\"btn\" style=\"background-color: #00b8df;\" type=\"submit\">Edit</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-sign-in',\r\n  templateUrl: './sign-in.component.html',\r\n  styleUrls: ['./sign-in.component.css']\r\n})\r\nexport class SignInComponent implements OnInit {\r\n\r\n  constructor(private userService : AuthuserService,private router : Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(userName,password){\r\n    this.userService.login(userName,password).subscribe((data : any)=>{\r\n     localStorage.setItem('userToken',data.access_token);\r\n    //  this.router.navigate(['/index']);\r\n     console.log( localStorage.getItem('userToken'));\r\n     this.userService.GetUserInfo(userName,password).subscribe(\r\n      data=>\r\n    {\r\n        this.userService.userInfo=data;\r\n        this.router.navigate(['/courses']) ;\r\n    }\r\n    ,err=>\r\n    {\r\n     alert(err)\r\n \r\n    }\r\n   );\r\n     \r\n   },\r\n   (err : HttpErrorResponse)=>{\r\n     \r\n   });\r\n\r\n\r\n   \r\n\r\n  \r\n }\r\n\r\n}\r\n\r\n","<!doctype html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\r\n    <meta name=\"description\" content=\"\">\r\n    <meta name=\"author\" content=\"Mark Otto, Jacob Thornton, and Bootstrap contributors\">\r\n    <meta name=\"generator\" content=\"Jekyll v4.0.1\">\r\n    <title>Signin Template · Bootstrap</title>\r\n\r\n    <link rel=\"canonical\" href=\"https://getbootstrap.com/docs/4.5/examples/sign-in/\">\r\n\r\n    <!-- Bootstrap core CSS -->\r\n    <!--<link href=\"../assets/dist/css/bootstrap.css\" rel=\"stylesheet\">-->\r\n\r\n    <style>\r\n        .bd-placeholder-img {\r\n            font-size: 1.125rem;\r\n            text-anchor: middle;\r\n            -webkit-user-select: none;\r\n            -moz-user-select: none;\r\n            -ms-user-select: none;\r\n            user-select: none;\r\n        }\r\n\r\n        @media (min-width: 768px) {\r\n            .bd-placeholder-img-lg {\r\n                font-size: 3.5rem;\r\n            }\r\n        }\r\n    </style>\r\n    <!-- Custom styles for this template -->\r\n    <!--<link href=\"signin.css\" rel=\"stylesheet\">-->\r\n</head>\r\n\r\n<body class=\"text-center\">\r\n    <form class=\"form-signin\" (ngSubmit)=\"login(uname.value , psd.value)\">\r\n        <img class=\"mb-4\" src=\"../assets/brand/bootstrap-solid.svg\" alt=\"\" width=\"72\" height=\"72\">\r\n        <h1 class=\"h3 mb-3 font-weight-normal\">Alemny</h1>\r\n        <label for=\"inputEmail\" class=\"sr-only\">Email address</label>\r\n        <input #uname type=\"email\" id=\"inputEmail\" class=\"form-control\" placeholder=\"Email address\" required autofocus>\r\n        <label for=\"inputPassword\" class=\"sr-only\">Password</label>\r\n        <input #psd type=\"password\" id=\"inputPassword\" class=\"form-control\" placeholder=\"Password\" required>\r\n        <div class=\"checkbox mb-3\">\r\n            <label>\r\n                <input type=\"checkbox\" value=\"remember-me\"> Remember me\r\n            </label>\r\n        </div>\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n        <label>\r\n           <a  [routerLink]=\"['/signup']\" > or Sign up now</a>\r\n        </label>\r\n    </form>\r\n</body>\r\n\r\n</html>","import { Component, OnInit } from '@angular/core';\r\nimport { IAccount } from 'src/Interfaces/iaccount';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  Validators,\r\n  EmailValidator,\r\n} from '@angular/forms';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { Iuser } from 'src/Interfaces/iuser';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css'],\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  account: Iuser;\r\n  LoginForm: FormGroup;\r\n  InstructorImage: File;\r\n  constructor(\r\n    private userSer: AuthuserService,\r\n    private router: Router,\r\n    private FB: FormBuilder\r\n  ) {\r\n    this.account = {\r\n      Id: '',\r\n      Type: 'Instructor',\r\n      Name: '',\r\n      UserName: '',\r\n      Image: '',\r\n      Level: 'First',\r\n      Email: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n      Address: '',\r\n      PhoneNumber: '',\r\n      Gender: 'Male',\r\n    };\r\n  }\r\n  ngOnInit(): void {\r\n    this.LoginForm = this.FB.group({\r\n      Type: ['', [Validators.required]],\r\n      Name: ['', [Validators.required, Validators.minLength(3)]],\r\n      UserName: ['', [Validators.required, Validators.minLength(3)]],\r\n      Image: ['', [Validators.required]],\r\n      Level: ['', [Validators.required]],\r\n      Email: ['', [Validators.required, Validators.email]],\r\n      Password: ['', [Validators.required, Validators.minLength(6)]],\r\n      ConfirmPassword: ['', [Validators.required, Validators.minLength(6)]],\r\n      Address: ['', [Validators.required, Validators.minLength(3)]],\r\n      PhoneNumber: [\r\n        '',\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(11),\r\n          Validators.maxLength(11),\r\n        ],\r\n      ],\r\n      Gender: ['', [Validators.required]],\r\n    });\r\n  }\r\n\r\n  readURL(event): void {\r\n    if (event.target.files && event.target.files[0]) {\r\n      this.InstructorImage = event.target.files[0];\r\n    }\r\n  }\r\n\r\n  reg() {\r\n\r\n    let image ;\r\n\r\n    this.userSer.registerUser(this.account, this.InstructorImage).subscribe(\r\n      (success) => {\r\n        console.log('register successfuly');\r\n\r\n        this.userSer\r\n          .login(this.account.UserName, this.account.Password)\r\n          .subscribe(\r\n            (res) => {\r\n              console.log(res);\r\n\r\n              localStorage.setItem('userToken', res.access_token);\r\n\r\n              localStorage.setItem('isLogin', 'true');\r\n\r\n              this.userSer\r\n                .GetUserInfo(this.account.UserName, this.account.Password)\r\n                .subscribe(\r\n                  (res) => {\r\n                    // TODO:\r\n                    // Recieve User data\r\n\r\n                    image = (res as Iuser).Image;\r\n                  },\r\n                  (err) => {}\r\n                );\r\n            },\r\n            (err) => console.log(err)\r\n          );\r\n\r\n        if (this.account.Type == 'Student') {\r\n\r\n          /**/\r\n\r\n          this.account.Image = \"assets/student-graduate-avatar-icon-vector.jpg\";\r\n\r\n          this.userSer.userInfo   = this.account;\r\n\r\n          localStorage.setItem('user', JSON.stringify(this.account));\r\n\r\n          this.router.navigate(['/studentcoures']);\r\n\r\n        } else if (this.account.Type == 'Instructor') {\r\n\r\n          this.account.Image = image;\r\n\r\n          this.userSer.userInfo = this.account;\r\n\r\n          this.router.navigate(['/courses']);\r\n        }\r\n      },\r\n      (err) => console.log(err)\r\n    );\r\n  }\r\n}\r\n","<!-- {{LoginForm.value|json}} -->\r\n<!-- <br>\r\n  <h2>Account</h2> -->\r\n\r\n<div style=\"background-color: #f5f6fa; padding-top: 20px;\">\r\n<form [formGroup]=\"LoginForm\" (ngSubmit)=\"reg()\" class=\"mx-auto\" style=\"width:45%;\">\r\n    <div class=\"\" style=\"padding: 20px ; border-radius: 35px;background-color: white;border: 1px solid lightgray\">\r\n        <div class=\"form-horizontal\">\r\n            <div class=\"mx-auto d-flex justify-content-center\" style=\"color:#00b8df\">\r\n                <h3 class=\" \" style=\"margin-left: 10px;\">Alemny </h3>\r\n            </div>\r\n           \r\n            <!-- <hr style=\"background-color: #f1c75f;\"/> -->\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Instructor or Student</label>\r\n\r\n                <select [(ngModel)]=\"account.Type\" class=\"form-control\" formControlName=\"Type\">\r\n                    <option value=\"Instructor\" selected>Instructor</option>\r\n                    <option value=\"Student\">Student</option>\r\n                </select>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Name</label>\r\n                <input [(ngModel)]=\"account.Name\" type=\"text\" class=\"form-control\" formControlName=\"Name\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['Name'].valid || LoginForm.controls['Name'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    Your Name is required and must be more Than 3 Chars\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">UserName</label>\r\n                <input [(ngModel)]=\"account.UserName\" type=\"text\" class=\"form-control\" formControlName=\"UserName\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['UserName'].valid || LoginForm.controls['UserName'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    UserName is required and must be more Than 3 Chars\r\n                </div>\r\n            </div>\r\n\r\n            <div *ngIf=\"account.Type=='Instructor'\" class=\"form-group\">\r\n                <label for=\"\">Image</label>\r\n                <input (change)=\"readURL($event);\" type=\"file\" class=\"form-control\" formControlName=\"Image\">\r\n            </div>\r\n\r\n            <div *ngIf=\"account.Type=='Student'\" class=\"form-group\">\r\n\r\n                <label for=\"\">Student Level</label>\r\n\r\n                <select [(ngModel)]=\"account.Level\" class=\"form-control\" formControlName=\"Level\">\r\n                    <option value=\"Stage1\" selected>Stage1</option>\r\n                    <option value=\"Stage2\">Stage2</option>\r\n                    <option value=\"Stage3\">Stage3</option>\r\n                    <option value=\"Stage4\">Stage4</option>\r\n\r\n                    <option value=\"Stage5\" >Stage5</option>\r\n                    <option value=\"Stage6\">Stage6</option>\r\n                    <option value=\"Stage7\">Stage7</option>\r\n                    <option value=\"Stage8\">Stage8</option>\r\n\r\n                </select>\r\n\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Email</label>\r\n                <input [(ngModel)]=\"account.Email\" type=\"email\" class=\"form-control\" formControlName=\"Email\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['Email'].valid || LoginForm.controls['Email'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    Your email must be in Format 'user@user.com'\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Password</label>\r\n                <input [(ngModel)]=\"account.Password\" type=\"password\" class=\"form-control\" formControlName=\"Password\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['Password'].valid || LoginForm.controls['Password'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    Password is required and must be more Than 6 Chars\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">ConfirmPassword</label>\r\n                <input [(ngModel)]=\"account.ConfirmPassword\" type=\"password\" class=\"form-control\"\r\n                    formControlName=\"ConfirmPassword\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['ConfirmPassword'].valid || LoginForm.controls['ConfirmPassword'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    Not match The Password\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Gender</label>\r\n\r\n                <select [(ngModel)]=\"account.Gender\" class=\"form-control\" formControlName=\"Gender\">\r\n                    <option value=\"Male\" selected>Male</option>\r\n                    <option value=\"Female\">Female</option>\r\n                </select>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Phone Number</label>\r\n                <input [(ngModel)]=\"account.PhoneNumber\" type=\"text\" class=\"form-control\" formControlName=\"PhoneNumber\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['PhoneNumber'].valid || LoginForm.controls['PhoneNumber'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    phone Number is required and must be 11 digits\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n                <label for=\"\">Address</label>\r\n                <input [(ngModel)]=\"account.Address\" type=\"text\" class=\"form-control\" formControlName=\"Address\">\r\n\r\n                <div [hidden]=\"LoginForm.controls['Address'].valid || LoginForm.controls['Address'].untouched\"\r\n                    class=\"alert alert-warning\">\r\n                    Address is required\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <button class=\"btn\" style=\"background-color: #00b8df;\" type=\"submit\">Register</button>\r\n\r\n        </div>\r\n    </div>\r\n</form>\r\n</div>","import { NgModule, Component } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignInComponent } from './Components/user/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './Components/user/sign-up/sign-up.component';\r\nimport { CreateCourseComponent } from './Components/Course/create-course/create-course.component';\r\nimport { SearchCourseResultsComponent } from './Components/search-course-results/search-course-results.component';\r\nimport { CourseDetailsComponent } from './Components/course-details/course-details.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { CoursesComponent } from './Components/Course/courses/courses.component';\r\nimport { UpdateCourseComponent } from './Components/Course/update-course/update-course.component';\r\nimport { ProfileComponent } from './Components/user/profile/profile.component';\r\nimport { StudentCoursesComponent } from './Components/Student/student-courses/student-courses.component';\r\nimport { AllCoursesInCategoryComponent } from './Components/Student/all-courses-in-category/all-courses-in-category.component';\r\nimport { CourseInfoComponent } from './Components/Student/course-info/course-info.component';\r\nimport { ExamComponent } from './Components/exam/exam.component';\r\nimport { MaterialComponent } from './Components/Course/material/material.component';\r\nimport { TakeExamComponent } from './Components/Student/take-exam/take-exam.component';\r\nimport{AuthGuard} from 'src/app/auth.guard';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  { path:'home',component:HomeComponent},\r\n  { path:'signin' , component:SignInComponent },\r\n  { path:'signup' , component:SignUpComponent },\r\n  { path:'profile' , component:ProfileComponent ,canActivate:[AuthGuard]},\r\n  \r\n  {path : 'createcourse' , component : CreateCourseComponent,canActivate:[AuthGuard]},\r\n  {path:'UpdateCourse/:CourseId',component:UpdateCourseComponent,canActivate:[AuthGuard]},\r\n  {path :'courses' , component :CoursesComponent,canActivate:[AuthGuard] },\r\n  { path:'courses/:StgID/:Sem/:Subject',component:SearchCourseResultsComponent,canActivate:[AuthGuard]},\r\n  { path:'coursedetails/:CourseId' , component:CourseDetailsComponent ,canActivate:[AuthGuard]},\r\n  { path: 'courseinfo/:CourseId', component:CourseInfoComponent,canActivate:[AuthGuard]},\r\n  { path: 'exam/:CourseId' , component:ExamComponent,canActivate:[AuthGuard]},\r\n   {path :'Material/lesson/:lessonID' , component :MaterialComponent,canActivate:[AuthGuard] }, // ,canActivate:[AuthGuard]},\r\n   {path :'takeexam/:courseId' , component :TakeExamComponent ,canActivate:[AuthGuard]},\r\n\r\n\r\n  \r\n \r\n  { path :'studentcoures' , component :StudentCoursesComponent },\r\n  { path: 'allcourse/:courseCode/:stageId', component:AllCoursesInCategoryComponent},\r\n  { path:'',redirectTo:'/home',pathMatch:'full'},\r\n\r\n  \r\n  \r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { IAccount } from 'src/Interfaces/iaccount';\r\nimport { AuthuserService } from 'src/Services/auth.service';\r\nimport { ILesson } from 'src/Interfaces/ilesson';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Alemny';\r\n\r\n  aa : []\r\n\r\n  constructor() {}\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"container\" style=\"background-color: #faf8fa;\">\r\n    <app-navbar></app-navbar>\r\n\r\n    \r\n\r\n    <router-outlet></router-outlet>\r\n\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignInComponent } from './Components/user/sign-in/sign-in.component';\r\nimport { SignUpComponent } from './Components/user/sign-up/sign-up.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CreateCourseComponent } from './Components/Course/create-course/create-course.component';\r\nimport { SearchCourseResultsComponent } from './Components/search-course-results/search-course-results.component';\r\nimport { CourseDetailsComponent } from './Components/course-details/course-details.component';\r\nimport { ChapterComponent } from './Components/course-details/chapter/chapter.component';\r\nimport { LessonComponent } from './Components/course-details/lesson/lesson.component';\r\nimport { TeachersCourseComponent } from './Components/Course/teachers-course/teachers-course.component';\r\n\r\nimport { NavbarComponent } from './Components/navbar/navbar.component';\r\nimport { HomeComponent } from './Components/home/home.component';\r\nimport { CoursesComponent } from './Components/Course/courses/courses.component';\r\nimport { UpdateCourseComponent } from './Components/Course/update-course/update-course.component';\r\nimport { ProfileComponent } from './Components/user/profile/profile.component';\r\nimport { StudentCoursesComponent } from './Components/Student/student-courses/student-courses.component';\r\nimport { AllCoursesInCategoryComponent } from './Components/Student/all-courses-in-category/all-courses-in-category.component';\r\nimport { CourseInfoComponent } from './Components/Student/course-info/course-info.component';\r\nimport { ExamComponent } from './Components/exam/exam.component';\r\nimport { MaterialComponent } from './Components/Course/material/material.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TakeExamComponent } from './Components/Student/take-exam/take-exam.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignInComponent,\r\n    SignUpComponent,\r\n    CreateCourseComponent,\r\n    SearchCourseResultsComponent,\r\n    CourseDetailsComponent,\r\n    ChapterComponent,\r\n    LessonComponent,\r\n    TeachersCourseComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    CoursesComponent,\r\n    UpdateCourseComponent,\r\n    ProfileComponent,\r\n    StudentCoursesComponent,\r\n    AllCoursesInCategoryComponent,\r\n    CourseInfoComponent,\r\n    ExamComponent,\r\n    MaterialComponent,\r\n    TakeExamComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NgbModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ReactiveFormsModule, \r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot() // ToastrModule added\r\n     \r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthuserService } from 'src/Services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private _Router:Router,private _AuthService: AuthuserService) { }\n\n  \n  canActivate():boolean{\n    if(this._AuthService.loggedIn())return true\n    else \n    {\n      this._Router.navigate([\"/home\"]);\n      return false;\n    }\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  ApiURl:'http://www.alemny.somee.com/api',\r\n  ApiLogin:'http://www.alemny.somee.com/login',\r\n  URL:'http://www.alemny.somee.com'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}